/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 254.0, "minX": 0.0, "maxY": 52613.0, "series": [{"data": [[0.0, 255.0], [0.1, 255.0], [0.2, 255.0], [0.3, 255.0], [0.4, 256.0], [0.5, 256.0], [0.6, 256.0], [0.7, 257.0], [0.8, 257.0], [0.9, 257.0], [1.0, 257.0], [1.1, 257.0], [1.2, 257.0], [1.3, 257.0], [1.4, 257.0], [1.5, 257.0], [1.6, 257.0], [1.7, 257.0], [1.8, 257.0], [1.9, 257.0], [2.0, 257.0], [2.1, 257.0], [2.2, 257.0], [2.3, 257.0], [2.4, 257.0], [2.5, 257.0], [2.6, 257.0], [2.7, 257.0], [2.8, 257.0], [2.9, 257.0], [3.0, 257.0], [3.1, 257.0], [3.2, 257.0], [3.3, 257.0], [3.4, 257.0], [3.5, 257.0], [3.6, 257.0], [3.7, 257.0], [3.8, 257.0], [3.9, 257.0], [4.0, 257.0], [4.1, 257.0], [4.2, 257.0], [4.3, 257.0], [4.4, 257.0], [4.5, 257.0], [4.6, 257.0], [4.7, 257.0], [4.8, 257.0], [4.9, 257.0], [5.0, 257.0], [5.1, 257.0], [5.2, 257.0], [5.3, 257.0], [5.4, 257.0], [5.5, 257.0], [5.6, 257.0], [5.7, 257.0], [5.8, 257.0], [5.9, 257.0], [6.0, 257.0], [6.1, 257.0], [6.2, 257.0], [6.3, 257.0], [6.4, 258.0], [6.5, 258.0], [6.6, 258.0], [6.7, 258.0], [6.8, 258.0], [6.9, 258.0], [7.0, 258.0], [7.1, 258.0], [7.2, 258.0], [7.3, 258.0], [7.4, 258.0], [7.5, 258.0], [7.6, 258.0], [7.7, 258.0], [7.8, 258.0], [7.9, 258.0], [8.0, 258.0], [8.1, 258.0], [8.2, 258.0], [8.3, 258.0], [8.4, 258.0], [8.5, 258.0], [8.6, 258.0], [8.7, 258.0], [8.8, 258.0], [8.9, 258.0], [9.0, 258.0], [9.1, 258.0], [9.2, 258.0], [9.3, 258.0], [9.4, 258.0], [9.5, 258.0], [9.6, 258.0], [9.7, 258.0], [9.8, 258.0], [9.9, 258.0], [10.0, 258.0], [10.1, 258.0], [10.2, 258.0], [10.3, 258.0], [10.4, 258.0], [10.5, 258.0], [10.6, 258.0], [10.7, 258.0], [10.8, 258.0], [10.9, 258.0], [11.0, 258.0], [11.1, 258.0], [11.2, 258.0], [11.3, 258.0], [11.4, 258.0], [11.5, 258.0], [11.6, 258.0], [11.7, 258.0], [11.8, 258.0], [11.9, 258.0], [12.0, 258.0], [12.1, 258.0], [12.2, 258.0], [12.3, 258.0], [12.4, 258.0], [12.5, 258.0], [12.6, 258.0], [12.7, 258.0], [12.8, 258.0], [12.9, 258.0], [13.0, 258.0], [13.1, 258.0], [13.2, 258.0], [13.3, 258.0], [13.4, 258.0], [13.5, 258.0], [13.6, 258.0], [13.7, 258.0], [13.8, 258.0], [13.9, 258.0], [14.0, 258.0], [14.1, 258.0], [14.2, 258.0], [14.3, 258.0], [14.4, 258.0], [14.5, 258.0], [14.6, 258.0], [14.7, 258.0], [14.8, 258.0], [14.9, 258.0], [15.0, 258.0], [15.1, 258.0], [15.2, 258.0], [15.3, 258.0], [15.4, 258.0], [15.5, 258.0], [15.6, 258.0], [15.7, 258.0], [15.8, 258.0], [15.9, 258.0], [16.0, 258.0], [16.1, 258.0], [16.2, 258.0], [16.3, 258.0], [16.4, 259.0], [16.5, 259.0], [16.6, 259.0], [16.7, 259.0], [16.8, 259.0], [16.9, 259.0], [17.0, 259.0], [17.1, 259.0], [17.2, 259.0], [17.3, 259.0], [17.4, 259.0], [17.5, 259.0], [17.6, 259.0], [17.7, 259.0], [17.8, 259.0], [17.9, 259.0], [18.0, 259.0], [18.1, 259.0], [18.2, 259.0], [18.3, 259.0], [18.4, 259.0], [18.5, 259.0], [18.6, 259.0], [18.7, 259.0], [18.8, 259.0], [18.9, 259.0], [19.0, 259.0], [19.1, 259.0], [19.2, 259.0], [19.3, 259.0], [19.4, 259.0], [19.5, 259.0], [19.6, 259.0], [19.7, 259.0], [19.8, 259.0], [19.9, 259.0], [20.0, 259.0], [20.1, 259.0], [20.2, 259.0], [20.3, 259.0], [20.4, 259.0], [20.5, 259.0], [20.6, 259.0], [20.7, 259.0], [20.8, 259.0], [20.9, 259.0], [21.0, 259.0], [21.1, 259.0], [21.2, 259.0], [21.3, 259.0], [21.4, 259.0], [21.5, 259.0], [21.6, 259.0], [21.7, 259.0], [21.8, 259.0], [21.9, 259.0], [22.0, 259.0], [22.1, 259.0], [22.2, 259.0], [22.3, 259.0], [22.4, 259.0], [22.5, 259.0], [22.6, 259.0], [22.7, 259.0], [22.8, 259.0], [22.9, 259.0], [23.0, 259.0], [23.1, 259.0], [23.2, 259.0], [23.3, 259.0], [23.4, 259.0], [23.5, 259.0], [23.6, 259.0], [23.7, 259.0], [23.8, 259.0], [23.9, 259.0], [24.0, 259.0], [24.1, 259.0], [24.2, 259.0], [24.3, 259.0], [24.4, 259.0], [24.5, 259.0], [24.6, 259.0], [24.7, 259.0], [24.8, 259.0], [24.9, 259.0], [25.0, 259.0], [25.1, 259.0], [25.2, 259.0], [25.3, 259.0], [25.4, 259.0], [25.5, 259.0], [25.6, 259.0], [25.7, 259.0], [25.8, 259.0], [25.9, 259.0], [26.0, 259.0], [26.1, 259.0], [26.2, 259.0], [26.3, 259.0], [26.4, 259.0], [26.5, 259.0], [26.6, 259.0], [26.7, 259.0], [26.8, 259.0], [26.9, 259.0], [27.0, 259.0], [27.1, 259.0], [27.2, 259.0], [27.3, 259.0], [27.4, 259.0], [27.5, 259.0], [27.6, 259.0], [27.7, 259.0], [27.8, 259.0], [27.9, 259.0], [28.0, 259.0], [28.1, 259.0], [28.2, 259.0], [28.3, 259.0], [28.4, 259.0], [28.5, 259.0], [28.6, 259.0], [28.7, 259.0], [28.8, 259.0], [28.9, 259.0], [29.0, 259.0], [29.1, 259.0], [29.2, 259.0], [29.3, 259.0], [29.4, 259.0], [29.5, 259.0], [29.6, 259.0], [29.7, 259.0], [29.8, 259.0], [29.9, 259.0], [30.0, 259.0], [30.1, 259.0], [30.2, 259.0], [30.3, 259.0], [30.4, 260.0], [30.5, 260.0], [30.6, 260.0], [30.7, 260.0], [30.8, 260.0], [30.9, 260.0], [31.0, 260.0], [31.1, 260.0], [31.2, 260.0], [31.3, 260.0], [31.4, 260.0], [31.5, 260.0], [31.6, 260.0], [31.7, 260.0], [31.8, 260.0], [31.9, 260.0], [32.0, 260.0], [32.1, 260.0], [32.2, 260.0], [32.3, 260.0], [32.4, 260.0], [32.5, 260.0], [32.6, 260.0], [32.7, 260.0], [32.8, 260.0], [32.9, 260.0], [33.0, 260.0], [33.1, 260.0], [33.2, 260.0], [33.3, 260.0], [33.4, 260.0], [33.5, 260.0], [33.6, 260.0], [33.7, 260.0], [33.8, 260.0], [33.9, 260.0], [34.0, 260.0], [34.1, 260.0], [34.2, 260.0], [34.3, 260.0], [34.4, 260.0], [34.5, 260.0], [34.6, 260.0], [34.7, 260.0], [34.8, 260.0], [34.9, 260.0], [35.0, 260.0], [35.1, 260.0], [35.2, 260.0], [35.3, 260.0], [35.4, 260.0], [35.5, 260.0], [35.6, 260.0], [35.7, 260.0], [35.8, 260.0], [35.9, 260.0], [36.0, 260.0], [36.1, 260.0], [36.2, 260.0], [36.3, 260.0], [36.4, 260.0], [36.5, 260.0], [36.6, 260.0], [36.7, 260.0], [36.8, 260.0], [36.9, 260.0], [37.0, 260.0], [37.1, 260.0], [37.2, 260.0], [37.3, 260.0], [37.4, 260.0], [37.5, 260.0], [37.6, 260.0], [37.7, 260.0], [37.8, 260.0], [37.9, 260.0], [38.0, 260.0], [38.1, 260.0], [38.2, 260.0], [38.3, 260.0], [38.4, 260.0], [38.5, 260.0], [38.6, 260.0], [38.7, 260.0], [38.8, 260.0], [38.9, 260.0], [39.0, 260.0], [39.1, 260.0], [39.2, 260.0], [39.3, 260.0], [39.4, 260.0], [39.5, 260.0], [39.6, 260.0], [39.7, 260.0], [39.8, 260.0], [39.9, 260.0], [40.0, 260.0], [40.1, 260.0], [40.2, 260.0], [40.3, 260.0], [40.4, 260.0], [40.5, 260.0], [40.6, 260.0], [40.7, 260.0], [40.8, 260.0], [40.9, 260.0], [41.0, 260.0], [41.1, 260.0], [41.2, 260.0], [41.3, 260.0], [41.4, 260.0], [41.5, 260.0], [41.6, 260.0], [41.7, 260.0], [41.8, 260.0], [41.9, 260.0], [42.0, 260.0], [42.1, 260.0], [42.2, 260.0], [42.3, 260.0], [42.4, 260.0], [42.5, 260.0], [42.6, 260.0], [42.7, 260.0], [42.8, 260.0], [42.9, 260.0], [43.0, 260.0], [43.1, 260.0], [43.2, 260.0], [43.3, 260.0], [43.4, 260.0], [43.5, 260.0], [43.6, 260.0], [43.7, 260.0], [43.8, 260.0], [43.9, 260.0], [44.0, 260.0], [44.1, 260.0], [44.2, 260.0], [44.3, 260.0], [44.4, 260.0], [44.5, 260.0], [44.6, 260.0], [44.7, 260.0], [44.8, 260.0], [44.9, 260.0], [45.0, 261.0], [45.1, 261.0], [45.2, 261.0], [45.3, 261.0], [45.4, 261.0], [45.5, 261.0], [45.6, 261.0], [45.7, 261.0], [45.8, 261.0], [45.9, 261.0], [46.0, 261.0], [46.1, 261.0], [46.2, 261.0], [46.3, 261.0], [46.4, 261.0], [46.5, 261.0], [46.6, 261.0], [46.7, 261.0], [46.8, 261.0], [46.9, 261.0], [47.0, 261.0], [47.1, 261.0], [47.2, 261.0], [47.3, 261.0], [47.4, 261.0], [47.5, 261.0], [47.6, 261.0], [47.7, 261.0], [47.8, 261.0], [47.9, 261.0], [48.0, 261.0], [48.1, 261.0], [48.2, 261.0], [48.3, 261.0], [48.4, 261.0], [48.5, 261.0], [48.6, 261.0], [48.7, 261.0], [48.8, 261.0], [48.9, 261.0], [49.0, 261.0], [49.1, 261.0], [49.2, 261.0], [49.3, 261.0], [49.4, 261.0], [49.5, 261.0], [49.6, 261.0], [49.7, 261.0], [49.8, 261.0], [49.9, 261.0], [50.0, 261.0], [50.1, 261.0], [50.2, 261.0], [50.3, 261.0], [50.4, 261.0], [50.5, 261.0], [50.6, 261.0], [50.7, 261.0], [50.8, 261.0], [50.9, 261.0], [51.0, 261.0], [51.1, 261.0], [51.2, 261.0], [51.3, 261.0], [51.4, 261.0], [51.5, 261.0], [51.6, 261.0], [51.7, 261.0], [51.8, 261.0], [51.9, 261.0], [52.0, 261.0], [52.1, 261.0], [52.2, 261.0], [52.3, 261.0], [52.4, 261.0], [52.5, 261.0], [52.6, 261.0], [52.7, 261.0], [52.8, 261.0], [52.9, 261.0], [53.0, 261.0], [53.1, 261.0], [53.2, 261.0], [53.3, 261.0], [53.4, 261.0], [53.5, 261.0], [53.6, 261.0], [53.7, 261.0], [53.8, 261.0], [53.9, 261.0], [54.0, 261.0], [54.1, 261.0], [54.2, 261.0], [54.3, 261.0], [54.4, 261.0], [54.5, 261.0], [54.6, 261.0], [54.7, 261.0], [54.8, 261.0], [54.9, 261.0], [55.0, 261.0], [55.1, 261.0], [55.2, 261.0], [55.3, 261.0], [55.4, 261.0], [55.5, 261.0], [55.6, 261.0], [55.7, 261.0], [55.8, 261.0], [55.9, 261.0], [56.0, 261.0], [56.1, 261.0], [56.2, 261.0], [56.3, 261.0], [56.4, 261.0], [56.5, 261.0], [56.6, 261.0], [56.7, 261.0], [56.8, 261.0], [56.9, 261.0], [57.0, 261.0], [57.1, 261.0], [57.2, 261.0], [57.3, 261.0], [57.4, 261.0], [57.5, 261.0], [57.6, 261.0], [57.7, 261.0], [57.8, 261.0], [57.9, 261.0], [58.0, 262.0], [58.1, 262.0], [58.2, 262.0], [58.3, 262.0], [58.4, 262.0], [58.5, 262.0], [58.6, 262.0], [58.7, 262.0], [58.8, 262.0], [58.9, 262.0], [59.0, 262.0], [59.1, 262.0], [59.2, 262.0], [59.3, 262.0], [59.4, 262.0], [59.5, 262.0], [59.6, 262.0], [59.7, 262.0], [59.8, 262.0], [59.9, 262.0], [60.0, 262.0], [60.1, 262.0], [60.2, 262.0], [60.3, 262.0], [60.4, 262.0], [60.5, 262.0], [60.6, 262.0], [60.7, 262.0], [60.8, 262.0], [60.9, 262.0], [61.0, 262.0], [61.1, 262.0], [61.2, 262.0], [61.3, 262.0], [61.4, 262.0], [61.5, 262.0], [61.6, 262.0], [61.7, 262.0], [61.8, 262.0], [61.9, 262.0], [62.0, 262.0], [62.1, 262.0], [62.2, 262.0], [62.3, 262.0], [62.4, 262.0], [62.5, 262.0], [62.6, 262.0], [62.7, 262.0], [62.8, 262.0], [62.9, 262.0], [63.0, 262.0], [63.1, 262.0], [63.2, 262.0], [63.3, 262.0], [63.4, 262.0], [63.5, 262.0], [63.6, 262.0], [63.7, 262.0], [63.8, 262.0], [63.9, 262.0], [64.0, 262.0], [64.1, 262.0], [64.2, 262.0], [64.3, 262.0], [64.4, 262.0], [64.5, 262.0], [64.6, 262.0], [64.7, 262.0], [64.8, 262.0], [64.9, 262.0], [65.0, 262.0], [65.1, 262.0], [65.2, 262.0], [65.3, 262.0], [65.4, 262.0], [65.5, 262.0], [65.6, 262.0], [65.7, 262.0], [65.8, 262.0], [65.9, 262.0], [66.0, 262.0], [66.1, 262.0], [66.2, 262.0], [66.3, 262.0], [66.4, 262.0], [66.5, 262.0], [66.6, 262.0], [66.7, 262.0], [66.8, 262.0], [66.9, 262.0], [67.0, 262.0], [67.1, 262.0], [67.2, 262.0], [67.3, 262.0], [67.4, 262.0], [67.5, 262.0], [67.6, 262.0], [67.7, 262.0], [67.8, 262.0], [67.9, 262.0], [68.0, 262.0], [68.1, 262.0], [68.2, 262.0], [68.3, 262.0], [68.4, 263.0], [68.5, 263.0], [68.6, 263.0], [68.7, 263.0], [68.8, 263.0], [68.9, 263.0], [69.0, 263.0], [69.1, 263.0], [69.2, 263.0], [69.3, 263.0], [69.4, 263.0], [69.5, 263.0], [69.6, 263.0], [69.7, 263.0], [69.8, 263.0], [69.9, 263.0], [70.0, 263.0], [70.1, 263.0], [70.2, 263.0], [70.3, 263.0], [70.4, 263.0], [70.5, 263.0], [70.6, 263.0], [70.7, 263.0], [70.8, 263.0], [70.9, 263.0], [71.0, 263.0], [71.1, 263.0], [71.2, 263.0], [71.3, 263.0], [71.4, 263.0], [71.5, 263.0], [71.6, 263.0], [71.7, 263.0], [71.8, 263.0], [71.9, 263.0], [72.0, 263.0], [72.1, 263.0], [72.2, 263.0], [72.3, 263.0], [72.4, 263.0], [72.5, 263.0], [72.6, 263.0], [72.7, 263.0], [72.8, 263.0], [72.9, 263.0], [73.0, 263.0], [73.1, 263.0], [73.2, 263.0], [73.3, 263.0], [73.4, 264.0], [73.5, 264.0], [73.6, 264.0], [73.7, 264.0], [73.8, 264.0], [73.9, 264.0], [74.0, 264.0], [74.1, 264.0], [74.2, 264.0], [74.3, 264.0], [74.4, 264.0], [74.5, 264.0], [74.6, 264.0], [74.7, 264.0], [74.8, 264.0], [74.9, 264.0], [75.0, 264.0], [75.1, 264.0], [75.2, 264.0], [75.3, 264.0], [75.4, 264.0], [75.5, 264.0], [75.6, 264.0], [75.7, 264.0], [75.8, 264.0], [75.9, 264.0], [76.0, 264.0], [76.1, 264.0], [76.2, 264.0], [76.3, 264.0], [76.4, 265.0], [76.5, 265.0], [76.6, 265.0], [76.7, 265.0], [76.8, 265.0], [76.9, 265.0], [77.0, 265.0], [77.1, 265.0], [77.2, 265.0], [77.3, 265.0], [77.4, 265.0], [77.5, 265.0], [77.6, 265.0], [77.7, 265.0], [77.8, 265.0], [77.9, 265.0], [78.0, 266.0], [78.1, 266.0], [78.2, 266.0], [78.3, 266.0], [78.4, 266.0], [78.5, 266.0], [78.6, 266.0], [78.7, 266.0], [78.8, 266.0], [78.9, 266.0], [79.0, 266.0], [79.1, 266.0], [79.2, 266.0], [79.3, 266.0], [79.4, 266.0], [79.5, 266.0], [79.6, 266.0], [79.7, 266.0], [79.8, 266.0], [79.9, 266.0], [80.0, 266.0], [80.1, 266.0], [80.2, 266.0], [80.3, 266.0], [80.4, 266.0], [80.5, 266.0], [80.6, 266.0], [80.7, 267.0], [80.8, 267.0], [80.9, 267.0], [81.0, 267.0], [81.1, 267.0], [81.2, 267.0], [81.3, 267.0], [81.4, 268.0], [81.5, 268.0], [81.6, 268.0], [81.7, 268.0], [81.8, 268.0], [81.9, 268.0], [82.0, 268.0], [82.1, 269.0], [82.2, 269.0], [82.3, 269.0], [82.4, 271.0], [82.5, 271.0], [82.6, 271.0], [82.7, 271.0], [82.8, 271.0], [82.9, 271.0], [83.0, 271.0], [83.1, 272.0], [83.2, 272.0], [83.3, 272.0], [83.4, 275.0], [83.5, 275.0], [83.6, 275.0], [83.7, 390.0], [83.8, 390.0], [83.9, 390.0], [84.0, 409.0], [84.1, 409.0], [84.2, 409.0], [84.3, 409.0], [84.4, 409.0], [84.5, 409.0], [84.6, 409.0], [84.7, 513.0], [84.8, 513.0], [84.9, 513.0], [85.0, 514.0], [85.1, 514.0], [85.2, 514.0], [85.3, 514.0], [85.4, 794.0], [85.5, 794.0], [85.6, 794.0], [85.7, 803.0], [85.8, 803.0], [85.9, 803.0], [86.0, 805.0], [86.1, 805.0], [86.2, 805.0], [86.3, 805.0], [86.4, 806.0], [86.5, 806.0], [86.6, 806.0], [86.7, 806.0], [86.8, 806.0], [86.9, 806.0], [87.0, 808.0], [87.1, 808.0], [87.2, 808.0], [87.3, 808.0], [87.4, 819.0], [87.5, 819.0], [87.6, 819.0], [87.7, 822.0], [87.8, 822.0], [87.9, 822.0], [88.0, 822.0], [88.1, 822.0], [88.2, 822.0], [88.3, 822.0], [88.4, 823.0], [88.5, 823.0], [88.6, 823.0], [88.7, 825.0], [88.8, 825.0], [88.9, 825.0], [89.0, 828.0], [89.1, 828.0], [89.2, 828.0], [89.3, 828.0], [89.4, 829.0], [89.5, 829.0], [89.6, 829.0], [89.7, 829.0], [89.8, 829.0], [89.9, 829.0], [90.0, 836.0], [90.1, 836.0], [90.2, 836.0], [90.3, 836.0], [90.4, 841.0], [90.5, 841.0], [90.6, 841.0], [90.7, 841.0], [90.8, 841.0], [90.9, 841.0], [91.0, 843.0], [91.1, 843.0], [91.2, 843.0], [91.3, 843.0], [91.4, 844.0], [91.5, 844.0], [91.6, 844.0], [91.7, 850.0], [91.8, 850.0], [91.9, 850.0], [92.0, 851.0], [92.1, 851.0], [92.2, 851.0], [92.3, 851.0], [92.4, 854.0], [92.5, 854.0], [92.6, 854.0], [92.7, 854.0], [92.8, 854.0], [92.9, 854.0], [93.0, 855.0], [93.1, 855.0], [93.2, 855.0], [93.3, 855.0], [93.4, 855.0], [93.5, 855.0], [93.6, 855.0], [93.7, 856.0], [93.8, 856.0], [93.9, 856.0], [94.0, 872.0], [94.1, 872.0], [94.2, 872.0], [94.3, 872.0], [94.4, 872.0], [94.5, 872.0], [94.6, 872.0], [94.7, 876.0], [94.8, 876.0], [94.9, 876.0], [95.0, 892.0], [95.1, 892.0], [95.2, 892.0], [95.3, 892.0], [95.4, 918.0], [95.5, 918.0], [95.6, 918.0], [95.7, 919.0], [95.8, 919.0], [95.9, 919.0], [96.0, 921.0], [96.1, 921.0], [96.2, 921.0], [96.3, 921.0], [96.4, 922.0], [96.5, 922.0], [96.6, 922.0], [96.7, 935.0], [96.8, 935.0], [96.9, 935.0], [97.0, 936.0], [97.1, 936.0], [97.2, 936.0], [97.3, 936.0], [97.4, 984.0], [97.5, 984.0], [97.6, 984.0], [97.7, 991.0], [97.8, 991.0], [97.9, 991.0], [98.0, 1074.0], [98.1, 1074.0], [98.2, 1074.0], [98.3, 1074.0], [98.4, 1108.0], [98.5, 1108.0], [98.6, 1108.0], [98.7, 1119.0], [98.8, 1119.0], [98.9, 1119.0], [99.0, 1356.0], [99.1, 1356.0], [99.2, 1356.0], [99.3, 1356.0], [99.4, 1592.0], [99.5, 1592.0], [99.6, 1592.0], [99.7, 2523.0], [99.8, 2523.0], [99.9, 2523.0]], "isOverall": false, "label": "DeleteBokking", "isController": false}, {"data": [[0.0, 255.0], [0.1, 255.0], [0.2, 255.0], [0.3, 255.0], [0.4, 255.0], [0.5, 255.0], [0.6, 255.0], [0.7, 255.0], [0.8, 255.0], [0.9, 255.0], [1.0, 255.0], [1.1, 255.0], [1.2, 255.0], [1.3, 255.0], [1.4, 256.0], [1.5, 256.0], [1.6, 256.0], [1.7, 256.0], [1.8, 256.0], [1.9, 256.0], [2.0, 256.0], [2.1, 256.0], [2.2, 256.0], [2.3, 256.0], [2.4, 256.0], [2.5, 256.0], [2.6, 256.0], [2.7, 256.0], [2.8, 256.0], [2.9, 256.0], [3.0, 256.0], [3.1, 256.0], [3.2, 256.0], [3.3, 256.0], [3.4, 256.0], [3.5, 256.0], [3.6, 256.0], [3.7, 256.0], [3.8, 256.0], [3.9, 256.0], [4.0, 256.0], [4.1, 256.0], [4.2, 256.0], [4.3, 256.0], [4.4, 256.0], [4.5, 256.0], [4.6, 256.0], [4.7, 256.0], [4.8, 256.0], [4.9, 256.0], [5.0, 256.0], [5.1, 256.0], [5.2, 256.0], [5.3, 256.0], [5.4, 256.0], [5.5, 256.0], [5.6, 256.0], [5.7, 256.0], [5.8, 256.0], [5.9, 256.0], [6.0, 256.0], [6.1, 256.0], [6.2, 256.0], [6.3, 256.0], [6.4, 257.0], [6.5, 257.0], [6.6, 257.0], [6.7, 257.0], [6.8, 257.0], [6.9, 257.0], [7.0, 257.0], [7.1, 257.0], [7.2, 257.0], [7.3, 257.0], [7.4, 257.0], [7.5, 257.0], [7.6, 257.0], [7.7, 257.0], [7.8, 257.0], [7.9, 257.0], [8.0, 257.0], [8.1, 257.0], [8.2, 257.0], [8.3, 257.0], [8.4, 257.0], [8.5, 257.0], [8.6, 257.0], [8.7, 257.0], [8.8, 257.0], [8.9, 257.0], [9.0, 257.0], [9.1, 257.0], [9.2, 257.0], [9.3, 257.0], [9.4, 257.0], [9.5, 257.0], [9.6, 257.0], [9.7, 257.0], [9.8, 257.0], [9.9, 257.0], [10.0, 257.0], [10.1, 257.0], [10.2, 257.0], [10.3, 257.0], [10.4, 257.0], [10.5, 257.0], [10.6, 257.0], [10.7, 257.0], [10.8, 257.0], [10.9, 257.0], [11.0, 257.0], [11.1, 257.0], [11.2, 257.0], [11.3, 257.0], [11.4, 257.0], [11.5, 257.0], [11.6, 257.0], [11.7, 257.0], [11.8, 257.0], [11.9, 257.0], [12.0, 257.0], [12.1, 257.0], [12.2, 257.0], [12.3, 257.0], [12.4, 257.0], [12.5, 257.0], [12.6, 257.0], [12.7, 257.0], [12.8, 257.0], [12.9, 257.0], [13.0, 258.0], [13.1, 258.0], [13.2, 258.0], [13.3, 258.0], [13.4, 258.0], [13.5, 258.0], [13.6, 258.0], [13.7, 258.0], [13.8, 258.0], [13.9, 258.0], [14.0, 258.0], [14.1, 258.0], [14.2, 258.0], [14.3, 258.0], [14.4, 258.0], [14.5, 258.0], [14.6, 258.0], [14.7, 258.0], [14.8, 258.0], [14.9, 258.0], [15.0, 258.0], [15.1, 258.0], [15.2, 258.0], [15.3, 258.0], [15.4, 258.0], [15.5, 258.0], [15.6, 258.0], [15.7, 258.0], [15.8, 258.0], [15.9, 258.0], [16.0, 258.0], [16.1, 258.0], [16.2, 258.0], [16.3, 258.0], [16.4, 258.0], [16.5, 258.0], [16.6, 258.0], [16.7, 258.0], [16.8, 258.0], [16.9, 258.0], [17.0, 258.0], [17.1, 258.0], [17.2, 258.0], [17.3, 258.0], [17.4, 258.0], [17.5, 258.0], [17.6, 258.0], [17.7, 258.0], [17.8, 258.0], [17.9, 258.0], [18.0, 258.0], [18.1, 258.0], [18.2, 258.0], [18.3, 258.0], [18.4, 258.0], [18.5, 258.0], [18.6, 258.0], [18.7, 258.0], [18.8, 258.0], [18.9, 258.0], [19.0, 258.0], [19.1, 258.0], [19.2, 258.0], [19.3, 258.0], [19.4, 258.0], [19.5, 258.0], [19.6, 258.0], [19.7, 258.0], [19.8, 258.0], [19.9, 258.0], [20.0, 258.0], [20.1, 258.0], [20.2, 258.0], [20.3, 258.0], [20.4, 258.0], [20.5, 258.0], [20.6, 258.0], [20.7, 258.0], [20.8, 258.0], [20.9, 258.0], [21.0, 258.0], [21.1, 258.0], [21.2, 258.0], [21.3, 258.0], [21.4, 258.0], [21.5, 258.0], [21.6, 258.0], [21.7, 258.0], [21.8, 258.0], [21.9, 258.0], [22.0, 258.0], [22.1, 258.0], [22.2, 258.0], [22.3, 258.0], [22.4, 258.0], [22.5, 258.0], [22.6, 258.0], [22.7, 258.0], [22.8, 258.0], [22.9, 258.0], [23.0, 258.0], [23.1, 258.0], [23.2, 258.0], [23.3, 258.0], [23.4, 258.0], [23.5, 258.0], [23.6, 258.0], [23.7, 258.0], [23.8, 258.0], [23.9, 258.0], [24.0, 258.0], [24.1, 258.0], [24.2, 258.0], [24.3, 258.0], [24.4, 258.0], [24.5, 258.0], [24.6, 258.0], [24.7, 258.0], [24.8, 258.0], [24.9, 258.0], [25.0, 258.0], [25.1, 258.0], [25.2, 258.0], [25.3, 258.0], [25.4, 258.0], [25.5, 258.0], [25.6, 258.0], [25.7, 258.0], [25.8, 258.0], [25.9, 258.0], [26.0, 258.0], [26.1, 258.0], [26.2, 258.0], [26.3, 258.0], [26.4, 258.0], [26.5, 258.0], [26.6, 258.0], [26.7, 258.0], [26.8, 258.0], [26.9, 258.0], [27.0, 258.0], [27.1, 258.0], [27.2, 258.0], [27.3, 258.0], [27.4, 259.0], [27.5, 259.0], [27.6, 259.0], [27.7, 259.0], [27.8, 259.0], [27.9, 259.0], [28.0, 259.0], [28.1, 259.0], [28.2, 259.0], [28.3, 259.0], [28.4, 259.0], [28.5, 259.0], [28.6, 259.0], [28.7, 259.0], [28.8, 259.0], [28.9, 259.0], [29.0, 259.0], [29.1, 259.0], [29.2, 259.0], [29.3, 259.0], [29.4, 259.0], [29.5, 259.0], [29.6, 259.0], [29.7, 259.0], [29.8, 259.0], [29.9, 259.0], [30.0, 259.0], [30.1, 259.0], [30.2, 259.0], [30.3, 259.0], [30.4, 259.0], [30.5, 259.0], [30.6, 259.0], [30.7, 259.0], [30.8, 259.0], [30.9, 259.0], [31.0, 259.0], [31.1, 259.0], [31.2, 259.0], [31.3, 259.0], [31.4, 259.0], [31.5, 259.0], [31.6, 259.0], [31.7, 259.0], [31.8, 259.0], [31.9, 259.0], [32.0, 259.0], [32.1, 259.0], [32.2, 259.0], [32.3, 259.0], [32.4, 259.0], [32.5, 259.0], [32.6, 259.0], [32.7, 259.0], [32.8, 259.0], [32.9, 259.0], [33.0, 259.0], [33.1, 259.0], [33.2, 259.0], [33.3, 259.0], [33.4, 259.0], [33.5, 259.0], [33.6, 259.0], [33.7, 259.0], [33.8, 259.0], [33.9, 259.0], [34.0, 259.0], [34.1, 259.0], [34.2, 259.0], [34.3, 259.0], [34.4, 259.0], [34.5, 259.0], [34.6, 259.0], [34.7, 259.0], [34.8, 259.0], [34.9, 259.0], [35.0, 259.0], [35.1, 259.0], [35.2, 259.0], [35.3, 259.0], [35.4, 259.0], [35.5, 259.0], [35.6, 259.0], [35.7, 259.0], [35.8, 259.0], [35.9, 259.0], [36.0, 259.0], [36.1, 259.0], [36.2, 259.0], [36.3, 259.0], [36.4, 259.0], [36.5, 259.0], [36.6, 259.0], [36.7, 259.0], [36.8, 259.0], [36.9, 259.0], [37.0, 259.0], [37.1, 259.0], [37.2, 259.0], [37.3, 259.0], [37.4, 259.0], [37.5, 259.0], [37.6, 259.0], [37.7, 259.0], [37.8, 259.0], [37.9, 259.0], [38.0, 259.0], [38.1, 259.0], [38.2, 259.0], [38.3, 259.0], [38.4, 259.0], [38.5, 259.0], [38.6, 259.0], [38.7, 259.0], [38.8, 259.0], [38.9, 259.0], [39.0, 259.0], [39.1, 259.0], [39.2, 259.0], [39.3, 259.0], [39.4, 259.0], [39.5, 259.0], [39.6, 259.0], [39.7, 259.0], [39.8, 259.0], [39.9, 259.0], [40.0, 259.0], [40.1, 259.0], [40.2, 259.0], [40.3, 259.0], [40.4, 259.0], [40.5, 259.0], [40.6, 259.0], [40.7, 259.0], [40.8, 259.0], [40.9, 259.0], [41.0, 259.0], [41.1, 259.0], [41.2, 259.0], [41.3, 259.0], [41.4, 259.0], [41.5, 259.0], [41.6, 259.0], [41.7, 259.0], [41.8, 259.0], [41.9, 259.0], [42.0, 259.0], [42.1, 259.0], [42.2, 259.0], [42.3, 259.0], [42.4, 259.0], [42.5, 259.0], [42.6, 259.0], [42.7, 259.0], [42.8, 259.0], [42.9, 259.0], [43.0, 259.0], [43.1, 259.0], [43.2, 259.0], [43.3, 259.0], [43.4, 259.0], [43.5, 259.0], [43.6, 259.0], [43.7, 259.0], [43.8, 259.0], [43.9, 259.0], [44.0, 259.0], [44.1, 259.0], [44.2, 259.0], [44.3, 259.0], [44.4, 259.0], [44.5, 259.0], [44.6, 259.0], [44.7, 259.0], [44.8, 259.0], [44.9, 259.0], [45.0, 259.0], [45.1, 259.0], [45.2, 259.0], [45.3, 259.0], [45.4, 259.0], [45.5, 259.0], [45.6, 259.0], [45.7, 259.0], [45.8, 259.0], [45.9, 259.0], [46.0, 260.0], [46.1, 260.0], [46.2, 260.0], [46.3, 260.0], [46.4, 260.0], [46.5, 260.0], [46.6, 260.0], [46.7, 260.0], [46.8, 260.0], [46.9, 260.0], [47.0, 260.0], [47.1, 260.0], [47.2, 260.0], [47.3, 260.0], [47.4, 260.0], [47.5, 260.0], [47.6, 260.0], [47.7, 260.0], [47.8, 260.0], [47.9, 260.0], [48.0, 260.0], [48.1, 260.0], [48.2, 260.0], [48.3, 260.0], [48.4, 260.0], [48.5, 260.0], [48.6, 260.0], [48.7, 260.0], [48.8, 260.0], [48.9, 260.0], [49.0, 260.0], [49.1, 260.0], [49.2, 260.0], [49.3, 260.0], [49.4, 260.0], [49.5, 260.0], [49.6, 260.0], [49.7, 260.0], [49.8, 260.0], [49.9, 260.0], [50.0, 260.0], [50.1, 260.0], [50.2, 260.0], [50.3, 260.0], [50.4, 260.0], [50.5, 260.0], [50.6, 260.0], [50.7, 260.0], [50.8, 260.0], [50.9, 260.0], [51.0, 260.0], [51.1, 260.0], [51.2, 260.0], [51.3, 260.0], [51.4, 260.0], [51.5, 260.0], [51.6, 260.0], [51.7, 260.0], [51.8, 260.0], [51.9, 260.0], [52.0, 260.0], [52.1, 260.0], [52.2, 260.0], [52.3, 260.0], [52.4, 260.0], [52.5, 260.0], [52.6, 260.0], [52.7, 260.0], [52.8, 260.0], [52.9, 260.0], [53.0, 260.0], [53.1, 260.0], [53.2, 260.0], [53.3, 260.0], [53.4, 260.0], [53.5, 260.0], [53.6, 260.0], [53.7, 260.0], [53.8, 260.0], [53.9, 260.0], [54.0, 260.0], [54.1, 260.0], [54.2, 260.0], [54.3, 260.0], [54.4, 260.0], [54.5, 260.0], [54.6, 260.0], [54.7, 260.0], [54.8, 260.0], [54.9, 260.0], [55.0, 260.0], [55.1, 260.0], [55.2, 260.0], [55.3, 260.0], [55.4, 260.0], [55.5, 260.0], [55.6, 260.0], [55.7, 260.0], [55.8, 260.0], [55.9, 260.0], [56.0, 260.0], [56.1, 260.0], [56.2, 260.0], [56.3, 260.0], [56.4, 260.0], [56.5, 260.0], [56.6, 260.0], [56.7, 260.0], [56.8, 260.0], [56.9, 260.0], [57.0, 260.0], [57.1, 260.0], [57.2, 260.0], [57.3, 260.0], [57.4, 260.0], [57.5, 260.0], [57.6, 260.0], [57.7, 260.0], [57.8, 260.0], [57.9, 260.0], [58.0, 260.0], [58.1, 260.0], [58.2, 260.0], [58.3, 260.0], [58.4, 260.0], [58.5, 260.0], [58.6, 260.0], [58.7, 260.0], [58.8, 260.0], [58.9, 260.0], [59.0, 260.0], [59.1, 260.0], [59.2, 260.0], [59.3, 260.0], [59.4, 261.0], [59.5, 261.0], [59.6, 261.0], [59.7, 261.0], [59.8, 261.0], [59.9, 261.0], [60.0, 261.0], [60.1, 261.0], [60.2, 261.0], [60.3, 261.0], [60.4, 261.0], [60.5, 261.0], [60.6, 261.0], [60.7, 261.0], [60.8, 261.0], [60.9, 261.0], [61.0, 261.0], [61.1, 261.0], [61.2, 261.0], [61.3, 261.0], [61.4, 261.0], [61.5, 261.0], [61.6, 261.0], [61.7, 261.0], [61.8, 261.0], [61.9, 261.0], [62.0, 261.0], [62.1, 261.0], [62.2, 261.0], [62.3, 261.0], [62.4, 261.0], [62.5, 261.0], [62.6, 261.0], [62.7, 261.0], [62.8, 261.0], [62.9, 261.0], [63.0, 261.0], [63.1, 261.0], [63.2, 261.0], [63.3, 261.0], [63.4, 261.0], [63.5, 261.0], [63.6, 261.0], [63.7, 261.0], [63.8, 261.0], [63.9, 261.0], [64.0, 261.0], [64.1, 261.0], [64.2, 261.0], [64.3, 261.0], [64.4, 261.0], [64.5, 261.0], [64.6, 261.0], [64.7, 261.0], [64.8, 261.0], [64.9, 261.0], [65.0, 261.0], [65.1, 261.0], [65.2, 261.0], [65.3, 261.0], [65.4, 261.0], [65.5, 261.0], [65.6, 261.0], [65.7, 261.0], [65.8, 261.0], [65.9, 261.0], [66.0, 261.0], [66.1, 261.0], [66.2, 261.0], [66.3, 261.0], [66.4, 261.0], [66.5, 261.0], [66.6, 261.0], [66.7, 261.0], [66.8, 261.0], [66.9, 261.0], [67.0, 261.0], [67.1, 261.0], [67.2, 261.0], [67.3, 261.0], [67.4, 261.0], [67.5, 261.0], [67.6, 261.0], [67.7, 261.0], [67.8, 261.0], [67.9, 261.0], [68.0, 262.0], [68.1, 262.0], [68.2, 262.0], [68.3, 262.0], [68.4, 262.0], [68.5, 262.0], [68.6, 262.0], [68.7, 262.0], [68.8, 262.0], [68.9, 262.0], [69.0, 262.0], [69.1, 262.0], [69.2, 262.0], [69.3, 262.0], [69.4, 262.0], [69.5, 262.0], [69.6, 262.0], [69.7, 262.0], [69.8, 262.0], [69.9, 262.0], [70.0, 263.0], [70.1, 263.0], [70.2, 263.0], [70.3, 263.0], [70.4, 263.0], [70.5, 263.0], [70.6, 263.0], [70.7, 263.0], [70.8, 263.0], [70.9, 263.0], [71.0, 263.0], [71.1, 263.0], [71.2, 263.0], [71.3, 263.0], [71.4, 263.0], [71.5, 263.0], [71.6, 263.0], [71.7, 263.0], [71.8, 263.0], [71.9, 263.0], [72.0, 263.0], [72.1, 263.0], [72.2, 263.0], [72.3, 263.0], [72.4, 263.0], [72.5, 263.0], [72.6, 263.0], [72.7, 263.0], [72.8, 263.0], [72.9, 263.0], [73.0, 263.0], [73.1, 263.0], [73.2, 263.0], [73.3, 263.0], [73.4, 263.0], [73.5, 263.0], [73.6, 263.0], [73.7, 263.0], [73.8, 263.0], [73.9, 263.0], [74.0, 263.0], [74.1, 263.0], [74.2, 263.0], [74.3, 263.0], [74.4, 263.0], [74.5, 263.0], [74.6, 263.0], [74.7, 263.0], [74.8, 263.0], [74.9, 263.0], [75.0, 263.0], [75.1, 263.0], [75.2, 263.0], [75.3, 263.0], [75.4, 263.0], [75.5, 263.0], [75.6, 263.0], [75.7, 264.0], [75.8, 264.0], [75.9, 264.0], [76.0, 264.0], [76.1, 264.0], [76.2, 264.0], [76.3, 264.0], [76.4, 264.0], [76.5, 264.0], [76.6, 264.0], [76.7, 264.0], [76.8, 264.0], [76.9, 264.0], [77.0, 264.0], [77.1, 264.0], [77.2, 264.0], [77.3, 264.0], [77.4, 264.0], [77.5, 264.0], [77.6, 264.0], [77.7, 264.0], [77.8, 264.0], [77.9, 264.0], [78.0, 264.0], [78.1, 264.0], [78.2, 264.0], [78.3, 264.0], [78.4, 265.0], [78.5, 265.0], [78.6, 265.0], [78.7, 265.0], [78.8, 265.0], [78.9, 265.0], [79.0, 265.0], [79.1, 265.0], [79.2, 265.0], [79.3, 265.0], [79.4, 265.0], [79.5, 265.0], [79.6, 265.0], [79.7, 266.0], [79.8, 266.0], [79.9, 266.0], [80.0, 266.0], [80.1, 266.0], [80.2, 266.0], [80.3, 266.0], [80.4, 267.0], [80.5, 267.0], [80.6, 267.0], [80.7, 268.0], [80.8, 268.0], [80.9, 268.0], [81.0, 269.0], [81.1, 269.0], [81.2, 269.0], [81.3, 269.0], [81.4, 514.0], [81.5, 514.0], [81.6, 514.0], [81.7, 515.0], [81.8, 515.0], [81.9, 515.0], [82.0, 557.0], [82.1, 557.0], [82.2, 557.0], [82.3, 557.0], [82.4, 589.0], [82.5, 589.0], [82.6, 589.0], [82.7, 855.0], [82.8, 855.0], [82.9, 855.0], [83.0, 863.0], [83.1, 863.0], [83.2, 863.0], [83.3, 863.0], [83.4, 868.0], [83.5, 868.0], [83.6, 868.0], [83.7, 870.0], [83.8, 870.0], [83.9, 870.0], [84.0, 872.0], [84.1, 872.0], [84.2, 872.0], [84.3, 872.0], [84.4, 879.0], [84.5, 879.0], [84.6, 879.0], [84.7, 886.0], [84.8, 886.0], [84.9, 886.0], [85.0, 890.0], [85.1, 890.0], [85.2, 890.0], [85.3, 890.0], [85.4, 898.0], [85.5, 898.0], [85.6, 898.0], [85.7, 902.0], [85.8, 902.0], [85.9, 902.0], [86.0, 910.0], [86.1, 910.0], [86.2, 910.0], [86.3, 910.0], [86.4, 911.0], [86.5, 911.0], [86.6, 911.0], [86.7, 914.0], [86.8, 914.0], [86.9, 914.0], [87.0, 921.0], [87.1, 921.0], [87.2, 921.0], [87.3, 921.0], [87.4, 923.0], [87.5, 923.0], [87.6, 923.0], [87.7, 924.0], [87.8, 924.0], [87.9, 924.0], [88.0, 925.0], [88.1, 925.0], [88.2, 925.0], [88.3, 925.0], [88.4, 927.0], [88.5, 927.0], [88.6, 927.0], [88.7, 928.0], [88.8, 928.0], [88.9, 928.0], [89.0, 930.0], [89.1, 930.0], [89.2, 930.0], [89.3, 930.0], [89.4, 943.0], [89.5, 943.0], [89.6, 943.0], [89.7, 950.0], [89.8, 950.0], [89.9, 950.0], [90.0, 951.0], [90.1, 951.0], [90.2, 951.0], [90.3, 951.0], [90.4, 953.0], [90.5, 953.0], [90.6, 953.0], [90.7, 967.0], [90.8, 967.0], [90.9, 967.0], [91.0, 972.0], [91.1, 972.0], [91.2, 972.0], [91.3, 972.0], [91.4, 984.0], [91.5, 984.0], [91.6, 984.0], [91.7, 986.0], [91.8, 986.0], [91.9, 986.0], [92.0, 988.0], [92.1, 988.0], [92.2, 988.0], [92.3, 988.0], [92.4, 991.0], [92.5, 991.0], [92.6, 991.0], [92.7, 991.0], [92.8, 991.0], [92.9, 991.0], [93.0, 993.0], [93.1, 993.0], [93.2, 993.0], [93.3, 993.0], [93.4, 998.0], [93.5, 998.0], [93.6, 998.0], [93.7, 1019.0], [93.8, 1019.0], [93.9, 1019.0], [94.0, 1038.0], [94.1, 1038.0], [94.2, 1038.0], [94.3, 1038.0], [94.4, 1051.0], [94.5, 1051.0], [94.6, 1051.0], [94.7, 1090.0], [94.8, 1090.0], [94.9, 1090.0], [95.0, 1120.0], [95.1, 1120.0], [95.2, 1120.0], [95.3, 1120.0], [95.4, 1211.0], [95.5, 1211.0], [95.6, 1211.0], [95.7, 1236.0], [95.8, 1236.0], [95.9, 1236.0], [96.0, 1269.0], [96.1, 1269.0], [96.2, 1269.0], [96.3, 1269.0], [96.4, 1515.0], [96.5, 1515.0], [96.6, 1515.0], [96.7, 1554.0], [96.8, 1554.0], [96.9, 1554.0], [97.0, 1587.0], [97.1, 1587.0], [97.2, 1587.0], [97.3, 1587.0], [97.4, 1593.0], [97.5, 1593.0], [97.6, 1593.0], [97.7, 1596.0], [97.8, 1596.0], [97.9, 1596.0], [98.0, 1663.0], [98.1, 1663.0], [98.2, 1663.0], [98.3, 1663.0], [98.4, 1663.0], [98.5, 1663.0], [98.6, 1663.0], [98.7, 2068.0], [98.8, 2068.0], [98.9, 2068.0], [99.0, 2435.0], [99.1, 2435.0], [99.2, 2435.0], [99.3, 2435.0], [99.4, 3040.0], [99.5, 3040.0], [99.6, 3040.0], [99.7, 5626.0], [99.8, 5626.0], [99.9, 5626.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[0.0, 254.0], [0.1, 254.0], [0.2, 254.0], [0.3, 254.0], [0.4, 254.0], [0.5, 254.0], [0.6, 254.0], [0.7, 254.0], [0.8, 254.0], [0.9, 254.0], [1.0, 254.0], [1.1, 254.0], [1.2, 254.0], [1.3, 254.0], [1.4, 254.0], [1.5, 254.0], [1.6, 254.0], [1.7, 255.0], [1.8, 255.0], [1.9, 255.0], [2.0, 255.0], [2.1, 255.0], [2.2, 255.0], [2.3, 255.0], [2.4, 255.0], [2.5, 255.0], [2.6, 255.0], [2.7, 255.0], [2.8, 255.0], [2.9, 255.0], [3.0, 255.0], [3.1, 255.0], [3.2, 255.0], [3.3, 255.0], [3.4, 255.0], [3.5, 255.0], [3.6, 255.0], [3.7, 255.0], [3.8, 255.0], [3.9, 255.0], [4.0, 255.0], [4.1, 255.0], [4.2, 255.0], [4.3, 255.0], [4.4, 256.0], [4.5, 256.0], [4.6, 256.0], [4.7, 256.0], [4.8, 256.0], [4.9, 256.0], [5.0, 256.0], [5.1, 256.0], [5.2, 256.0], [5.3, 256.0], [5.4, 256.0], [5.5, 256.0], [5.6, 256.0], [5.7, 256.0], [5.8, 256.0], [5.9, 256.0], [6.0, 256.0], [6.1, 256.0], [6.2, 256.0], [6.3, 256.0], [6.4, 256.0], [6.5, 256.0], [6.6, 256.0], [6.7, 256.0], [6.8, 256.0], [6.9, 256.0], [7.0, 256.0], [7.1, 256.0], [7.2, 256.0], [7.3, 256.0], [7.4, 256.0], [7.5, 256.0], [7.6, 256.0], [7.7, 256.0], [7.8, 256.0], [7.9, 256.0], [8.0, 256.0], [8.1, 256.0], [8.2, 256.0], [8.3, 256.0], [8.4, 256.0], [8.5, 256.0], [8.6, 256.0], [8.7, 256.0], [8.8, 256.0], [8.9, 256.0], [9.0, 256.0], [9.1, 256.0], [9.2, 256.0], [9.3, 256.0], [9.4, 256.0], [9.5, 256.0], [9.6, 256.0], [9.7, 256.0], [9.8, 256.0], [9.9, 256.0], [10.0, 256.0], [10.1, 256.0], [10.2, 256.0], [10.3, 256.0], [10.4, 256.0], [10.5, 256.0], [10.6, 256.0], [10.7, 256.0], [10.8, 256.0], [10.9, 256.0], [11.0, 256.0], [11.1, 256.0], [11.2, 256.0], [11.3, 256.0], [11.4, 256.0], [11.5, 256.0], [11.6, 256.0], [11.7, 256.0], [11.8, 256.0], [11.9, 256.0], [12.0, 256.0], [12.1, 256.0], [12.2, 256.0], [12.3, 256.0], [12.4, 256.0], [12.5, 256.0], [12.6, 256.0], [12.7, 256.0], [12.8, 256.0], [12.9, 256.0], [13.0, 256.0], [13.1, 256.0], [13.2, 256.0], [13.3, 256.0], [13.4, 256.0], [13.5, 256.0], [13.6, 256.0], [13.7, 256.0], [13.8, 256.0], [13.9, 256.0], [14.0, 256.0], [14.1, 256.0], [14.2, 256.0], [14.3, 256.0], [14.4, 257.0], [14.5, 257.0], [14.6, 257.0], [14.7, 257.0], [14.8, 257.0], [14.9, 257.0], [15.0, 257.0], [15.1, 257.0], [15.2, 257.0], [15.3, 257.0], [15.4, 257.0], [15.5, 257.0], [15.6, 257.0], [15.7, 257.0], [15.8, 257.0], [15.9, 257.0], [16.0, 257.0], [16.1, 257.0], [16.2, 257.0], [16.3, 257.0], [16.4, 257.0], [16.5, 257.0], [16.6, 257.0], [16.7, 257.0], [16.8, 257.0], [16.9, 257.0], [17.0, 257.0], [17.1, 257.0], [17.2, 257.0], [17.3, 257.0], [17.4, 257.0], [17.5, 257.0], [17.6, 257.0], [17.7, 257.0], [17.8, 257.0], [17.9, 257.0], [18.0, 257.0], [18.1, 257.0], [18.2, 257.0], [18.3, 257.0], [18.4, 257.0], [18.5, 257.0], [18.6, 257.0], [18.7, 257.0], [18.8, 257.0], [18.9, 257.0], [19.0, 257.0], [19.1, 257.0], [19.2, 257.0], [19.3, 257.0], [19.4, 257.0], [19.5, 257.0], [19.6, 257.0], [19.7, 257.0], [19.8, 257.0], [19.9, 257.0], [20.0, 257.0], [20.1, 257.0], [20.2, 257.0], [20.3, 257.0], [20.4, 257.0], [20.5, 257.0], [20.6, 257.0], [20.7, 257.0], [20.8, 257.0], [20.9, 257.0], [21.0, 257.0], [21.1, 257.0], [21.2, 257.0], [21.3, 257.0], [21.4, 257.0], [21.5, 257.0], [21.6, 257.0], [21.7, 257.0], [21.8, 257.0], [21.9, 257.0], [22.0, 257.0], [22.1, 257.0], [22.2, 257.0], [22.3, 257.0], [22.4, 257.0], [22.5, 257.0], [22.6, 257.0], [22.7, 257.0], [22.8, 257.0], [22.9, 257.0], [23.0, 257.0], [23.1, 257.0], [23.2, 257.0], [23.3, 257.0], [23.4, 257.0], [23.5, 257.0], [23.6, 257.0], [23.7, 257.0], [23.8, 257.0], [23.9, 257.0], [24.0, 257.0], [24.1, 257.0], [24.2, 257.0], [24.3, 257.0], [24.4, 257.0], [24.5, 257.0], [24.6, 257.0], [24.7, 257.0], [24.8, 257.0], [24.9, 257.0], [25.0, 257.0], [25.1, 257.0], [25.2, 257.0], [25.3, 257.0], [25.4, 257.0], [25.5, 257.0], [25.6, 257.0], [25.7, 258.0], [25.8, 258.0], [25.9, 258.0], [26.0, 258.0], [26.1, 258.0], [26.2, 258.0], [26.3, 258.0], [26.4, 258.0], [26.5, 258.0], [26.6, 258.0], [26.7, 258.0], [26.8, 258.0], [26.9, 258.0], [27.0, 258.0], [27.1, 258.0], [27.2, 258.0], [27.3, 258.0], [27.4, 258.0], [27.5, 258.0], [27.6, 258.0], [27.7, 258.0], [27.8, 258.0], [27.9, 258.0], [28.0, 258.0], [28.1, 258.0], [28.2, 258.0], [28.3, 258.0], [28.4, 258.0], [28.5, 258.0], [28.6, 258.0], [28.7, 258.0], [28.8, 258.0], [28.9, 258.0], [29.0, 258.0], [29.1, 258.0], [29.2, 258.0], [29.3, 258.0], [29.4, 258.0], [29.5, 258.0], [29.6, 258.0], [29.7, 258.0], [29.8, 258.0], [29.9, 258.0], [30.0, 258.0], [30.1, 258.0], [30.2, 258.0], [30.3, 258.0], [30.4, 258.0], [30.5, 258.0], [30.6, 258.0], [30.7, 258.0], [30.8, 258.0], [30.9, 258.0], [31.0, 258.0], [31.1, 258.0], [31.2, 258.0], [31.3, 258.0], [31.4, 258.0], [31.5, 258.0], [31.6, 258.0], [31.7, 258.0], [31.8, 258.0], [31.9, 258.0], [32.0, 258.0], [32.1, 258.0], [32.2, 258.0], [32.3, 258.0], [32.4, 258.0], [32.5, 258.0], [32.6, 258.0], [32.7, 258.0], [32.8, 258.0], [32.9, 258.0], [33.0, 258.0], [33.1, 258.0], [33.2, 258.0], [33.3, 258.0], [33.4, 258.0], [33.5, 258.0], [33.6, 258.0], [33.7, 258.0], [33.8, 258.0], [33.9, 258.0], [34.0, 258.0], [34.1, 258.0], [34.2, 258.0], [34.3, 258.0], [34.4, 258.0], [34.5, 258.0], [34.6, 258.0], [34.7, 258.0], [34.8, 258.0], [34.9, 258.0], [35.0, 258.0], [35.1, 258.0], [35.2, 258.0], [35.3, 258.0], [35.4, 258.0], [35.5, 258.0], [35.6, 258.0], [35.7, 258.0], [35.8, 258.0], [35.9, 258.0], [36.0, 258.0], [36.1, 258.0], [36.2, 258.0], [36.3, 258.0], [36.4, 258.0], [36.5, 258.0], [36.6, 258.0], [36.7, 258.0], [36.8, 258.0], [36.9, 258.0], [37.0, 258.0], [37.1, 258.0], [37.2, 258.0], [37.3, 258.0], [37.4, 258.0], [37.5, 258.0], [37.6, 258.0], [37.7, 258.0], [37.8, 258.0], [37.9, 258.0], [38.0, 258.0], [38.1, 258.0], [38.2, 258.0], [38.3, 258.0], [38.4, 258.0], [38.5, 258.0], [38.6, 258.0], [38.7, 259.0], [38.8, 259.0], [38.9, 259.0], [39.0, 259.0], [39.1, 259.0], [39.2, 259.0], [39.3, 259.0], [39.4, 259.0], [39.5, 259.0], [39.6, 259.0], [39.7, 259.0], [39.8, 259.0], [39.9, 259.0], [40.0, 259.0], [40.1, 259.0], [40.2, 259.0], [40.3, 259.0], [40.4, 259.0], [40.5, 259.0], [40.6, 259.0], [40.7, 259.0], [40.8, 259.0], [40.9, 259.0], [41.0, 259.0], [41.1, 259.0], [41.2, 259.0], [41.3, 259.0], [41.4, 259.0], [41.5, 259.0], [41.6, 259.0], [41.7, 259.0], [41.8, 259.0], [41.9, 259.0], [42.0, 259.0], [42.1, 259.0], [42.2, 259.0], [42.3, 259.0], [42.4, 259.0], [42.5, 259.0], [42.6, 259.0], [42.7, 259.0], [42.8, 259.0], [42.9, 259.0], [43.0, 259.0], [43.1, 259.0], [43.2, 259.0], [43.3, 259.0], [43.4, 259.0], [43.5, 259.0], [43.6, 259.0], [43.7, 259.0], [43.8, 259.0], [43.9, 259.0], [44.0, 259.0], [44.1, 259.0], [44.2, 259.0], [44.3, 259.0], [44.4, 259.0], [44.5, 259.0], [44.6, 259.0], [44.7, 259.0], [44.8, 259.0], [44.9, 259.0], [45.0, 259.0], [45.1, 259.0], [45.2, 259.0], [45.3, 259.0], [45.4, 259.0], [45.5, 259.0], [45.6, 259.0], [45.7, 259.0], [45.8, 259.0], [45.9, 259.0], [46.0, 259.0], [46.1, 259.0], [46.2, 259.0], [46.3, 259.0], [46.4, 259.0], [46.5, 259.0], [46.6, 259.0], [46.7, 259.0], [46.8, 259.0], [46.9, 259.0], [47.0, 259.0], [47.1, 259.0], [47.2, 259.0], [47.3, 259.0], [47.4, 259.0], [47.5, 259.0], [47.6, 259.0], [47.7, 259.0], [47.8, 259.0], [47.9, 259.0], [48.0, 259.0], [48.1, 259.0], [48.2, 259.0], [48.3, 259.0], [48.4, 259.0], [48.5, 259.0], [48.6, 259.0], [48.7, 259.0], [48.8, 259.0], [48.9, 259.0], [49.0, 259.0], [49.1, 259.0], [49.2, 259.0], [49.3, 259.0], [49.4, 259.0], [49.5, 259.0], [49.6, 259.0], [49.7, 259.0], [49.8, 259.0], [49.9, 259.0], [50.0, 259.0], [50.1, 259.0], [50.2, 259.0], [50.3, 259.0], [50.4, 259.0], [50.5, 259.0], [50.6, 259.0], [50.7, 259.0], [50.8, 259.0], [50.9, 259.0], [51.0, 259.0], [51.1, 259.0], [51.2, 259.0], [51.3, 259.0], [51.4, 259.0], [51.5, 259.0], [51.6, 259.0], [51.7, 259.0], [51.8, 259.0], [51.9, 259.0], [52.0, 259.0], [52.1, 259.0], [52.2, 259.0], [52.3, 259.0], [52.4, 259.0], [52.5, 259.0], [52.6, 259.0], [52.7, 259.0], [52.8, 259.0], [52.9, 259.0], [53.0, 259.0], [53.1, 259.0], [53.2, 259.0], [53.3, 259.0], [53.4, 259.0], [53.5, 259.0], [53.6, 259.0], [53.7, 259.0], [53.8, 259.0], [53.9, 259.0], [54.0, 259.0], [54.1, 259.0], [54.2, 259.0], [54.3, 259.0], [54.4, 259.0], [54.5, 259.0], [54.6, 259.0], [54.7, 259.0], [54.8, 259.0], [54.9, 259.0], [55.0, 259.0], [55.1, 259.0], [55.2, 259.0], [55.3, 259.0], [55.4, 259.0], [55.5, 259.0], [55.6, 259.0], [55.7, 259.0], [55.8, 259.0], [55.9, 259.0], [56.0, 259.0], [56.1, 259.0], [56.2, 259.0], [56.3, 259.0], [56.4, 259.0], [56.5, 259.0], [56.6, 259.0], [56.7, 259.0], [56.8, 259.0], [56.9, 259.0], [57.0, 259.0], [57.1, 259.0], [57.2, 259.0], [57.3, 259.0], [57.4, 260.0], [57.5, 260.0], [57.6, 260.0], [57.7, 260.0], [57.8, 260.0], [57.9, 260.0], [58.0, 260.0], [58.1, 260.0], [58.2, 260.0], [58.3, 260.0], [58.4, 260.0], [58.5, 260.0], [58.6, 260.0], [58.7, 260.0], [58.8, 260.0], [58.9, 260.0], [59.0, 260.0], [59.1, 260.0], [59.2, 260.0], [59.3, 260.0], [59.4, 260.0], [59.5, 260.0], [59.6, 260.0], [59.7, 260.0], [59.8, 260.0], [59.9, 260.0], [60.0, 260.0], [60.1, 260.0], [60.2, 260.0], [60.3, 260.0], [60.4, 260.0], [60.5, 260.0], [60.6, 260.0], [60.7, 260.0], [60.8, 260.0], [60.9, 260.0], [61.0, 260.0], [61.1, 260.0], [61.2, 260.0], [61.3, 260.0], [61.4, 260.0], [61.5, 260.0], [61.6, 260.0], [61.7, 260.0], [61.8, 260.0], [61.9, 260.0], [62.0, 260.0], [62.1, 260.0], [62.2, 260.0], [62.3, 260.0], [62.4, 260.0], [62.5, 260.0], [62.6, 260.0], [62.7, 260.0], [62.8, 260.0], [62.9, 260.0], [63.0, 260.0], [63.1, 260.0], [63.2, 260.0], [63.3, 260.0], [63.4, 260.0], [63.5, 260.0], [63.6, 260.0], [63.7, 260.0], [63.8, 260.0], [63.9, 260.0], [64.0, 260.0], [64.1, 260.0], [64.2, 260.0], [64.3, 260.0], [64.4, 260.0], [64.5, 260.0], [64.6, 260.0], [64.7, 260.0], [64.8, 260.0], [64.9, 260.0], [65.0, 261.0], [65.1, 261.0], [65.2, 261.0], [65.3, 261.0], [65.4, 261.0], [65.5, 261.0], [65.6, 261.0], [65.7, 261.0], [65.8, 261.0], [65.9, 261.0], [66.0, 261.0], [66.1, 261.0], [66.2, 261.0], [66.3, 261.0], [66.4, 261.0], [66.5, 261.0], [66.6, 261.0], [66.7, 261.0], [66.8, 261.0], [66.9, 261.0], [67.0, 261.0], [67.1, 261.0], [67.2, 261.0], [67.3, 261.0], [67.4, 261.0], [67.5, 261.0], [67.6, 261.0], [67.7, 261.0], [67.8, 261.0], [67.9, 261.0], [68.0, 261.0], [68.1, 261.0], [68.2, 261.0], [68.3, 261.0], [68.4, 261.0], [68.5, 261.0], [68.6, 261.0], [68.7, 261.0], [68.8, 261.0], [68.9, 261.0], [69.0, 261.0], [69.1, 261.0], [69.2, 261.0], [69.3, 261.0], [69.4, 261.0], [69.5, 261.0], [69.6, 261.0], [69.7, 261.0], [69.8, 261.0], [69.9, 261.0], [70.0, 261.0], [70.1, 261.0], [70.2, 261.0], [70.3, 261.0], [70.4, 261.0], [70.5, 261.0], [70.6, 261.0], [70.7, 262.0], [70.8, 262.0], [70.9, 262.0], [71.0, 262.0], [71.1, 262.0], [71.2, 262.0], [71.3, 262.0], [71.4, 262.0], [71.5, 262.0], [71.6, 262.0], [71.7, 262.0], [71.8, 262.0], [71.9, 262.0], [72.0, 262.0], [72.1, 262.0], [72.2, 262.0], [72.3, 262.0], [72.4, 262.0], [72.5, 262.0], [72.6, 262.0], [72.7, 262.0], [72.8, 262.0], [72.9, 262.0], [73.0, 262.0], [73.1, 262.0], [73.2, 262.0], [73.3, 262.0], [73.4, 263.0], [73.5, 263.0], [73.6, 263.0], [73.7, 263.0], [73.8, 263.0], [73.9, 263.0], [74.0, 263.0], [74.1, 263.0], [74.2, 263.0], [74.3, 263.0], [74.4, 263.0], [74.5, 263.0], [74.6, 263.0], [74.7, 263.0], [74.8, 263.0], [74.9, 263.0], [75.0, 263.0], [75.1, 263.0], [75.2, 263.0], [75.3, 263.0], [75.4, 264.0], [75.5, 264.0], [75.6, 264.0], [75.7, 264.0], [75.8, 264.0], [75.9, 264.0], [76.0, 264.0], [76.1, 264.0], [76.2, 264.0], [76.3, 264.0], [76.4, 265.0], [76.5, 265.0], [76.6, 265.0], [76.7, 265.0], [76.8, 265.0], [76.9, 265.0], [77.0, 265.0], [77.1, 266.0], [77.2, 266.0], [77.3, 266.0], [77.4, 268.0], [77.5, 268.0], [77.6, 268.0], [77.7, 269.0], [77.8, 269.0], [77.9, 269.0], [78.0, 269.0], [78.1, 269.0], [78.2, 269.0], [78.3, 269.0], [78.4, 513.0], [78.5, 513.0], [78.6, 513.0], [78.7, 514.0], [78.8, 514.0], [78.9, 514.0], [79.0, 515.0], [79.1, 515.0], [79.2, 515.0], [79.3, 515.0], [79.4, 914.0], [79.5, 914.0], [79.6, 914.0], [79.7, 916.0], [79.8, 916.0], [79.9, 916.0], [80.0, 916.0], [80.1, 916.0], [80.2, 916.0], [80.3, 916.0], [80.4, 916.0], [80.5, 916.0], [80.6, 916.0], [80.7, 919.0], [80.8, 919.0], [80.9, 919.0], [81.0, 920.0], [81.1, 920.0], [81.2, 920.0], [81.3, 920.0], [81.4, 921.0], [81.5, 921.0], [81.6, 921.0], [81.7, 922.0], [81.8, 922.0], [81.9, 922.0], [82.0, 923.0], [82.1, 923.0], [82.2, 923.0], [82.3, 923.0], [82.4, 926.0], [82.5, 926.0], [82.6, 926.0], [82.7, 927.0], [82.8, 927.0], [82.9, 927.0], [83.0, 929.0], [83.1, 929.0], [83.2, 929.0], [83.3, 929.0], [83.4, 929.0], [83.5, 929.0], [83.6, 929.0], [83.7, 929.0], [83.8, 929.0], [83.9, 929.0], [84.0, 930.0], [84.1, 930.0], [84.2, 930.0], [84.3, 930.0], [84.4, 930.0], [84.5, 930.0], [84.6, 930.0], [84.7, 931.0], [84.8, 931.0], [84.9, 931.0], [85.0, 932.0], [85.1, 932.0], [85.2, 932.0], [85.3, 932.0], [85.4, 936.0], [85.5, 936.0], [85.6, 936.0], [85.7, 944.0], [85.8, 944.0], [85.9, 944.0], [86.0, 954.0], [86.1, 954.0], [86.2, 954.0], [86.3, 954.0], [86.4, 955.0], [86.5, 955.0], [86.6, 955.0], [86.7, 955.0], [86.8, 955.0], [86.9, 955.0], [87.0, 961.0], [87.1, 961.0], [87.2, 961.0], [87.3, 961.0], [87.4, 970.0], [87.5, 970.0], [87.6, 970.0], [87.7, 971.0], [87.8, 971.0], [87.9, 971.0], [88.0, 972.0], [88.1, 972.0], [88.2, 972.0], [88.3, 972.0], [88.4, 981.0], [88.5, 981.0], [88.6, 981.0], [88.7, 985.0], [88.8, 985.0], [88.9, 985.0], [89.0, 987.0], [89.1, 987.0], [89.2, 987.0], [89.3, 987.0], [89.4, 988.0], [89.5, 988.0], [89.6, 988.0], [89.7, 988.0], [89.8, 988.0], [89.9, 988.0], [90.0, 989.0], [90.1, 989.0], [90.2, 989.0], [90.3, 989.0], [90.4, 990.0], [90.5, 990.0], [90.6, 990.0], [90.7, 993.0], [90.8, 993.0], [90.9, 993.0], [91.0, 995.0], [91.1, 995.0], [91.2, 995.0], [91.3, 995.0], [91.4, 996.0], [91.5, 996.0], [91.6, 996.0], [91.7, 998.0], [91.8, 998.0], [91.9, 998.0], [92.0, 999.0], [92.1, 999.0], [92.2, 999.0], [92.3, 999.0], [92.4, 1033.0], [92.5, 1033.0], [92.6, 1033.0], [92.7, 1053.0], [92.8, 1053.0], [92.9, 1053.0], [93.0, 1073.0], [93.1, 1073.0], [93.2, 1073.0], [93.3, 1073.0], [93.4, 1152.0], [93.5, 1152.0], [93.6, 1152.0], [93.7, 1169.0], [93.8, 1169.0], [93.9, 1169.0], [94.0, 1177.0], [94.1, 1177.0], [94.2, 1177.0], [94.3, 1177.0], [94.4, 1247.0], [94.5, 1247.0], [94.6, 1247.0], [94.7, 1278.0], [94.8, 1278.0], [94.9, 1278.0], [95.0, 1585.0], [95.1, 1585.0], [95.2, 1585.0], [95.3, 1585.0], [95.4, 1591.0], [95.5, 1591.0], [95.6, 1591.0], [95.7, 1594.0], [95.8, 1594.0], [95.9, 1594.0], [96.0, 1598.0], [96.1, 1598.0], [96.2, 1598.0], [96.3, 1598.0], [96.4, 1611.0], [96.5, 1611.0], [96.6, 1611.0], [96.7, 1669.0], [96.8, 1669.0], [96.9, 1669.0], [97.0, 1736.0], [97.1, 1736.0], [97.2, 1736.0], [97.3, 1736.0], [97.4, 1782.0], [97.5, 1782.0], [97.6, 1782.0], [97.7, 1810.0], [97.8, 1810.0], [97.9, 1810.0], [98.0, 1828.0], [98.1, 1828.0], [98.2, 1828.0], [98.3, 1828.0], [98.4, 2436.0], [98.5, 2436.0], [98.6, 2436.0], [98.7, 2910.0], [98.8, 2910.0], [98.9, 2910.0], [99.0, 2916.0], [99.1, 2916.0], [99.2, 2916.0], [99.3, 2916.0], [99.4, 2959.0], [99.5, 2959.0], [99.6, 2959.0], [99.7, 3038.0], [99.8, 3038.0], [99.9, 3038.0]], "isOverall": false, "label": "CreateBooking", "isController": false}, {"data": [[0.0, 1023.0], [0.1, 1023.0], [0.2, 1023.0], [0.3, 1023.0], [0.4, 1024.0], [0.5, 1024.0], [0.6, 1024.0], [0.7, 1025.0], [0.8, 1025.0], [0.9, 1025.0], [1.0, 1025.0], [1.1, 1025.0], [1.2, 1025.0], [1.3, 1025.0], [1.4, 1026.0], [1.5, 1026.0], [1.6, 1026.0], [1.7, 1028.0], [1.8, 1028.0], [1.9, 1028.0], [2.0, 1028.0], [2.1, 1028.0], [2.2, 1028.0], [2.3, 1028.0], [2.4, 1029.0], [2.5, 1029.0], [2.6, 1029.0], [2.7, 1030.0], [2.8, 1030.0], [2.9, 1030.0], [3.0, 1032.0], [3.1, 1032.0], [3.2, 1032.0], [3.3, 1032.0], [3.4, 1032.0], [3.5, 1032.0], [3.6, 1032.0], [3.7, 1032.0], [3.8, 1032.0], [3.9, 1032.0], [4.0, 1033.0], [4.1, 1033.0], [4.2, 1033.0], [4.3, 1033.0], [4.4, 1033.0], [4.5, 1033.0], [4.6, 1033.0], [4.7, 1034.0], [4.8, 1034.0], [4.9, 1034.0], [5.0, 1034.0], [5.1, 1034.0], [5.2, 1034.0], [5.3, 1034.0], [5.4, 1036.0], [5.5, 1036.0], [5.6, 1036.0], [5.7, 1038.0], [5.8, 1038.0], [5.9, 1038.0], [6.0, 1040.0], [6.1, 1040.0], [6.2, 1040.0], [6.3, 1040.0], [6.4, 1041.0], [6.5, 1041.0], [6.6, 1041.0], [6.7, 1046.0], [6.8, 1046.0], [6.9, 1046.0], [7.0, 1047.0], [7.1, 1047.0], [7.2, 1047.0], [7.3, 1047.0], [7.4, 1052.0], [7.5, 1052.0], [7.6, 1052.0], [7.7, 1055.0], [7.8, 1055.0], [7.9, 1055.0], [8.0, 1056.0], [8.1, 1056.0], [8.2, 1056.0], [8.3, 1056.0], [8.4, 1280.0], [8.5, 1280.0], [8.6, 1280.0], [8.7, 1282.0], [8.8, 1282.0], [8.9, 1282.0], [9.0, 1282.0], [9.1, 1282.0], [9.2, 1282.0], [9.3, 1282.0], [9.4, 1283.0], [9.5, 1283.0], [9.6, 1283.0], [9.7, 1284.0], [9.8, 1284.0], [9.9, 1284.0], [10.0, 1285.0], [10.1, 1285.0], [10.2, 1285.0], [10.3, 1285.0], [10.4, 1286.0], [10.5, 1286.0], [10.6, 1286.0], [10.7, 1286.0], [10.8, 1286.0], [10.9, 1286.0], [11.0, 1287.0], [11.1, 1287.0], [11.2, 1287.0], [11.3, 1287.0], [11.4, 1287.0], [11.5, 1287.0], [11.6, 1287.0], [11.7, 1287.0], [11.8, 1287.0], [11.9, 1287.0], [12.0, 1289.0], [12.1, 1289.0], [12.2, 1289.0], [12.3, 1289.0], [12.4, 1289.0], [12.5, 1289.0], [12.6, 1289.0], [12.7, 1290.0], [12.8, 1290.0], [12.9, 1290.0], [13.0, 1290.0], [13.1, 1290.0], [13.2, 1290.0], [13.3, 1290.0], [13.4, 1291.0], [13.5, 1291.0], [13.6, 1291.0], [13.7, 1292.0], [13.8, 1292.0], [13.9, 1292.0], [14.0, 1295.0], [14.1, 1295.0], [14.2, 1295.0], [14.3, 1295.0], [14.4, 1298.0], [14.5, 1298.0], [14.6, 1298.0], [14.7, 1311.0], [14.8, 1311.0], [14.9, 1311.0], [15.0, 1311.0], [15.1, 1340.0], [15.2, 1340.0], [15.3, 1340.0], [15.4, 1344.0], [15.5, 1344.0], [15.6, 1344.0], [15.7, 1347.0], [15.8, 1347.0], [15.9, 1347.0], [16.0, 1347.0], [16.1, 1355.0], [16.2, 1355.0], [16.3, 1355.0], [16.4, 1359.0], [16.5, 1359.0], [16.6, 1359.0], [16.7, 1360.0], [16.8, 1360.0], [16.9, 1360.0], [17.0, 1450.0], [17.1, 1450.0], [17.2, 1450.0], [17.3, 1450.0], [17.4, 1535.0], [17.5, 1535.0], [17.6, 1535.0], [17.7, 1536.0], [17.8, 1536.0], [17.9, 1536.0], [18.0, 1545.0], [18.1, 1545.0], [18.2, 1545.0], [18.3, 1545.0], [18.4, 1546.0], [18.5, 1546.0], [18.6, 1546.0], [18.7, 1589.0], [18.8, 1589.0], [18.9, 1589.0], [19.0, 1596.0], [19.1, 1596.0], [19.2, 1596.0], [19.3, 1596.0], [19.4, 1600.0], [19.5, 1600.0], [19.6, 1600.0], [19.7, 1603.0], [19.8, 1603.0], [19.9, 1603.0], [20.0, 1608.0], [20.1, 1608.0], [20.2, 1608.0], [20.3, 1608.0], [20.4, 1610.0], [20.5, 1610.0], [20.6, 1610.0], [20.7, 1612.0], [20.8, 1612.0], [20.9, 1612.0], [21.0, 1617.0], [21.1, 1617.0], [21.2, 1617.0], [21.3, 1617.0], [21.4, 1618.0], [21.5, 1618.0], [21.6, 1618.0], [21.7, 1623.0], [21.8, 1623.0], [21.9, 1623.0], [22.0, 1664.0], [22.1, 1664.0], [22.2, 1664.0], [22.3, 1664.0], [22.4, 1696.0], [22.5, 1696.0], [22.6, 1696.0], [22.7, 1741.0], [22.8, 1741.0], [22.9, 1741.0], [23.0, 1800.0], [23.1, 1800.0], [23.2, 1800.0], [23.3, 1800.0], [23.4, 1814.0], [23.5, 1814.0], [23.6, 1814.0], [23.7, 1815.0], [23.8, 1815.0], [23.9, 1815.0], [24.0, 1821.0], [24.1, 1821.0], [24.2, 1821.0], [24.3, 1821.0], [24.4, 1844.0], [24.5, 1844.0], [24.6, 1844.0], [24.7, 1861.0], [24.8, 1861.0], [24.9, 1861.0], [25.0, 1930.0], [25.1, 1930.0], [25.2, 1930.0], [25.3, 1930.0], [25.4, 1987.0], [25.5, 1987.0], [25.6, 1987.0], [25.7, 2024.0], [25.8, 2024.0], [25.9, 2024.0], [26.0, 2047.0], [26.1, 2047.0], [26.2, 2047.0], [26.3, 2047.0], [26.4, 2057.0], [26.5, 2057.0], [26.6, 2057.0], [26.7, 2064.0], [26.8, 2064.0], [26.9, 2064.0], [27.0, 2074.0], [27.1, 2074.0], [27.2, 2074.0], [27.3, 2074.0], [27.4, 2074.0], [27.5, 2074.0], [27.6, 2074.0], [27.7, 2092.0], [27.8, 2092.0], [27.9, 2092.0], [28.0, 2102.0], [28.1, 2102.0], [28.2, 2102.0], [28.3, 2102.0], [28.4, 2103.0], [28.5, 2103.0], [28.6, 2103.0], [28.7, 2118.0], [28.8, 2118.0], [28.9, 2118.0], [29.0, 2136.0], [29.1, 2136.0], [29.2, 2136.0], [29.3, 2136.0], [29.4, 2149.0], [29.5, 2149.0], [29.6, 2149.0], [29.7, 2150.0], [29.8, 2150.0], [29.9, 2150.0], [30.0, 2259.0], [30.1, 2259.0], [30.2, 2259.0], [30.3, 2259.0], [30.4, 2268.0], [30.5, 2268.0], [30.6, 2268.0], [30.7, 2298.0], [30.8, 2298.0], [30.9, 2298.0], [31.0, 2305.0], [31.1, 2305.0], [31.2, 2305.0], [31.3, 2305.0], [31.4, 2311.0], [31.5, 2311.0], [31.6, 2311.0], [31.7, 2316.0], [31.8, 2316.0], [31.9, 2316.0], [32.0, 2321.0], [32.1, 2321.0], [32.2, 2321.0], [32.3, 2321.0], [32.4, 2323.0], [32.5, 2323.0], [32.6, 2323.0], [32.7, 2326.0], [32.8, 2326.0], [32.9, 2326.0], [33.0, 2327.0], [33.1, 2327.0], [33.2, 2327.0], [33.3, 2327.0], [33.4, 2329.0], [33.5, 2329.0], [33.6, 2329.0], [33.7, 2330.0], [33.8, 2330.0], [33.9, 2330.0], [34.0, 2334.0], [34.1, 2334.0], [34.2, 2334.0], [34.3, 2334.0], [34.4, 2339.0], [34.5, 2339.0], [34.6, 2339.0], [34.7, 2343.0], [34.8, 2343.0], [34.9, 2343.0], [35.0, 2344.0], [35.1, 2344.0], [35.2, 2344.0], [35.3, 2344.0], [35.4, 2351.0], [35.5, 2351.0], [35.6, 2351.0], [35.7, 2351.0], [35.8, 2351.0], [35.9, 2351.0], [36.0, 2358.0], [36.1, 2358.0], [36.2, 2358.0], [36.3, 2358.0], [36.4, 2375.0], [36.5, 2375.0], [36.6, 2375.0], [36.7, 2378.0], [36.8, 2378.0], [36.9, 2378.0], [37.0, 2378.0], [37.1, 2378.0], [37.2, 2378.0], [37.3, 2378.0], [37.4, 2383.0], [37.5, 2383.0], [37.6, 2383.0], [37.7, 2387.0], [37.8, 2387.0], [37.9, 2387.0], [38.0, 2405.0], [38.1, 2405.0], [38.2, 2405.0], [38.3, 2405.0], [38.4, 2552.0], [38.5, 2552.0], [38.6, 2552.0], [38.7, 2558.0], [38.8, 2558.0], [38.9, 2558.0], [39.0, 2564.0], [39.1, 2564.0], [39.2, 2564.0], [39.3, 2564.0], [39.4, 2574.0], [39.5, 2574.0], [39.6, 2574.0], [39.7, 2576.0], [39.8, 2576.0], [39.9, 2576.0], [40.0, 2578.0], [40.1, 2578.0], [40.2, 2578.0], [40.3, 2578.0], [40.4, 2581.0], [40.5, 2581.0], [40.6, 2581.0], [40.7, 2582.0], [40.8, 2582.0], [40.9, 2582.0], [41.0, 2614.0], [41.1, 2614.0], [41.2, 2614.0], [41.3, 2614.0], [41.4, 2617.0], [41.5, 2617.0], [41.6, 2617.0], [41.7, 2622.0], [41.8, 2622.0], [41.9, 2622.0], [42.0, 2622.0], [42.1, 2624.0], [42.2, 2624.0], [42.3, 2624.0], [42.4, 2632.0], [42.5, 2632.0], [42.6, 2632.0], [42.7, 2634.0], [42.8, 2634.0], [42.9, 2634.0], [43.0, 2634.0], [43.1, 2640.0], [43.2, 2640.0], [43.3, 2640.0], [43.4, 2645.0], [43.5, 2645.0], [43.6, 2645.0], [43.7, 2650.0], [43.8, 2650.0], [43.9, 2650.0], [44.0, 2650.0], [44.1, 2654.0], [44.2, 2654.0], [44.3, 2654.0], [44.4, 2667.0], [44.5, 2667.0], [44.6, 2667.0], [44.7, 2674.0], [44.8, 2674.0], [44.9, 2674.0], [45.0, 2674.0], [45.1, 2678.0], [45.2, 2678.0], [45.3, 2678.0], [45.4, 2683.0], [45.5, 2683.0], [45.6, 2683.0], [45.7, 2686.0], [45.8, 2686.0], [45.9, 2686.0], [46.0, 2686.0], [46.1, 2698.0], [46.2, 2698.0], [46.3, 2698.0], [46.4, 2732.0], [46.5, 2732.0], [46.6, 2732.0], [46.7, 2808.0], [46.8, 2808.0], [46.9, 2808.0], [47.0, 2808.0], [47.1, 2810.0], [47.2, 2810.0], [47.3, 2810.0], [47.4, 2817.0], [47.5, 2817.0], [47.6, 2817.0], [47.7, 2869.0], [47.8, 2869.0], [47.9, 2869.0], [48.0, 2869.0], [48.1, 2890.0], [48.2, 2890.0], [48.3, 2890.0], [48.4, 2907.0], [48.5, 2907.0], [48.6, 2907.0], [48.7, 2911.0], [48.8, 2911.0], [48.9, 2911.0], [49.0, 2911.0], [49.1, 2911.0], [49.2, 2911.0], [49.3, 2911.0], [49.4, 2947.0], [49.5, 2947.0], [49.6, 2947.0], [49.7, 2950.0], [49.8, 2950.0], [49.9, 2950.0], [50.0, 2950.0], [50.1, 2951.0], [50.2, 2951.0], [50.3, 2951.0], [50.4, 2962.0], [50.5, 2962.0], [50.6, 2962.0], [50.7, 3011.0], [50.8, 3011.0], [50.9, 3011.0], [51.0, 3011.0], [51.1, 3055.0], [51.2, 3055.0], [51.3, 3055.0], [51.4, 3059.0], [51.5, 3059.0], [51.6, 3059.0], [51.7, 3061.0], [51.8, 3061.0], [51.9, 3061.0], [52.0, 3061.0], [52.1, 3086.0], [52.2, 3086.0], [52.3, 3086.0], [52.4, 3116.0], [52.5, 3116.0], [52.6, 3116.0], [52.7, 3119.0], [52.8, 3119.0], [52.9, 3119.0], [53.0, 3119.0], [53.1, 3137.0], [53.2, 3137.0], [53.3, 3137.0], [53.4, 3157.0], [53.5, 3157.0], [53.6, 3157.0], [53.7, 3177.0], [53.8, 3177.0], [53.9, 3177.0], [54.0, 3177.0], [54.1, 3211.0], [54.2, 3211.0], [54.3, 3211.0], [54.4, 3237.0], [54.5, 3237.0], [54.6, 3237.0], [54.7, 3280.0], [54.8, 3280.0], [54.9, 3280.0], [55.0, 3280.0], [55.1, 3304.0], [55.2, 3304.0], [55.3, 3304.0], [55.4, 3307.0], [55.5, 3307.0], [55.6, 3307.0], [55.7, 3318.0], [55.8, 3318.0], [55.9, 3318.0], [56.0, 3318.0], [56.1, 3321.0], [56.2, 3321.0], [56.3, 3321.0], [56.4, 3354.0], [56.5, 3354.0], [56.6, 3354.0], [56.7, 3354.0], [56.8, 3354.0], [56.9, 3354.0], [57.0, 3354.0], [57.1, 3381.0], [57.2, 3381.0], [57.3, 3381.0], [57.4, 3412.0], [57.5, 3412.0], [57.6, 3412.0], [57.7, 3430.0], [57.8, 3430.0], [57.9, 3430.0], [58.0, 3430.0], [58.1, 3436.0], [58.2, 3436.0], [58.3, 3436.0], [58.4, 3602.0], [58.5, 3602.0], [58.6, 3602.0], [58.7, 3612.0], [58.8, 3612.0], [58.9, 3612.0], [59.0, 3612.0], [59.1, 3613.0], [59.2, 3613.0], [59.3, 3613.0], [59.4, 3658.0], [59.5, 3658.0], [59.6, 3658.0], [59.7, 3661.0], [59.8, 3661.0], [59.9, 3661.0], [60.0, 3661.0], [60.1, 3851.0], [60.2, 3851.0], [60.3, 3851.0], [60.4, 3855.0], [60.5, 3855.0], [60.6, 3855.0], [60.7, 3867.0], [60.8, 3867.0], [60.9, 3867.0], [61.0, 3867.0], [61.1, 3895.0], [61.2, 3895.0], [61.3, 3895.0], [61.4, 3933.0], [61.5, 3933.0], [61.6, 3933.0], [61.7, 3948.0], [61.8, 3948.0], [61.9, 3948.0], [62.0, 3948.0], [62.1, 3978.0], [62.2, 3978.0], [62.3, 3978.0], [62.4, 4005.0], [62.5, 4005.0], [62.6, 4005.0], [62.7, 4048.0], [62.8, 4048.0], [62.9, 4048.0], [63.0, 4048.0], [63.1, 4063.0], [63.2, 4063.0], [63.3, 4063.0], [63.4, 4090.0], [63.5, 4090.0], [63.6, 4090.0], [63.7, 4105.0], [63.8, 4105.0], [63.9, 4105.0], [64.0, 4105.0], [64.1, 4110.0], [64.2, 4110.0], [64.3, 4110.0], [64.4, 4110.0], [64.5, 4110.0], [64.6, 4110.0], [64.7, 4138.0], [64.8, 4138.0], [64.9, 4138.0], [65.0, 4138.0], [65.1, 4147.0], [65.2, 4147.0], [65.3, 4147.0], [65.4, 4182.0], [65.5, 4182.0], [65.6, 4182.0], [65.7, 4194.0], [65.8, 4194.0], [65.9, 4194.0], [66.0, 4194.0], [66.1, 4201.0], [66.2, 4201.0], [66.3, 4201.0], [66.4, 4217.0], [66.5, 4217.0], [66.6, 4217.0], [66.7, 4364.0], [66.8, 4364.0], [66.9, 4364.0], [67.0, 4364.0], [67.1, 4370.0], [67.2, 4370.0], [67.3, 4370.0], [67.4, 4378.0], [67.5, 4378.0], [67.6, 4378.0], [67.7, 4391.0], [67.8, 4391.0], [67.9, 4391.0], [68.0, 4391.0], [68.1, 4439.0], [68.2, 4439.0], [68.3, 4439.0], [68.4, 4480.0], [68.5, 4480.0], [68.6, 4480.0], [68.7, 4483.0], [68.8, 4483.0], [68.9, 4483.0], [69.0, 4483.0], [69.1, 4495.0], [69.2, 4495.0], [69.3, 4495.0], [69.4, 4496.0], [69.5, 4496.0], [69.6, 4496.0], [69.7, 4504.0], [69.8, 4504.0], [69.9, 4504.0], [70.0, 4504.0], [70.1, 4511.0], [70.2, 4511.0], [70.3, 4511.0], [70.4, 4515.0], [70.5, 4515.0], [70.6, 4515.0], [70.7, 4618.0], [70.8, 4618.0], [70.9, 4618.0], [71.0, 4618.0], [71.1, 4633.0], [71.2, 4633.0], [71.3, 4633.0], [71.4, 4664.0], [71.5, 4664.0], [71.6, 4664.0], [71.7, 4709.0], [71.8, 4709.0], [71.9, 4709.0], [72.0, 4709.0], [72.1, 4713.0], [72.2, 4713.0], [72.3, 4713.0], [72.4, 4729.0], [72.5, 4729.0], [72.6, 4729.0], [72.7, 4753.0], [72.8, 4753.0], [72.9, 4753.0], [73.0, 4753.0], [73.1, 4760.0], [73.2, 4760.0], [73.3, 4760.0], [73.4, 4835.0], [73.5, 4835.0], [73.6, 4835.0], [73.7, 4870.0], [73.8, 4870.0], [73.9, 4870.0], [74.0, 4870.0], [74.1, 4877.0], [74.2, 4877.0], [74.3, 4877.0], [74.4, 4880.0], [74.5, 4880.0], [74.6, 4880.0], [74.7, 4885.0], [74.8, 4885.0], [74.9, 4885.0], [75.0, 4887.0], [75.1, 4887.0], [75.2, 4887.0], [75.3, 4887.0], [75.4, 4905.0], [75.5, 4905.0], [75.6, 4905.0], [75.7, 4911.0], [75.8, 4911.0], [75.9, 4911.0], [76.0, 4942.0], [76.1, 4942.0], [76.2, 4942.0], [76.3, 4942.0], [76.4, 4963.0], [76.5, 4963.0], [76.6, 4963.0], [76.7, 4994.0], [76.8, 4994.0], [76.9, 4994.0], [77.0, 5022.0], [77.1, 5022.0], [77.2, 5022.0], [77.3, 5022.0], [77.4, 5033.0], [77.5, 5033.0], [77.6, 5033.0], [77.7, 5034.0], [77.8, 5034.0], [77.9, 5034.0], [78.0, 5036.0], [78.1, 5036.0], [78.2, 5036.0], [78.3, 5036.0], [78.4, 5083.0], [78.5, 5083.0], [78.6, 5083.0], [78.7, 5124.0], [78.8, 5124.0], [78.9, 5124.0], [79.0, 5125.0], [79.1, 5125.0], [79.2, 5125.0], [79.3, 5125.0], [79.4, 5175.0], [79.5, 5175.0], [79.6, 5175.0], [79.7, 5201.0], [79.8, 5201.0], [79.9, 5201.0], [80.0, 5390.0], [80.1, 5390.0], [80.2, 5390.0], [80.3, 5390.0], [80.4, 5413.0], [80.5, 5413.0], [80.6, 5413.0], [80.7, 5426.0], [80.8, 5426.0], [80.9, 5426.0], [81.0, 5442.0], [81.1, 5442.0], [81.2, 5442.0], [81.3, 5442.0], [81.4, 5500.0], [81.5, 5500.0], [81.6, 5500.0], [81.7, 5521.0], [81.8, 5521.0], [81.9, 5521.0], [82.0, 5542.0], [82.1, 5542.0], [82.2, 5542.0], [82.3, 5542.0], [82.4, 5852.0], [82.5, 5852.0], [82.6, 5852.0], [82.7, 5941.0], [82.8, 5941.0], [82.9, 5941.0], [83.0, 6264.0], [83.1, 6264.0], [83.2, 6264.0], [83.3, 6264.0], [83.4, 6308.0], [83.5, 6308.0], [83.6, 6308.0], [83.7, 7016.0], [83.8, 7016.0], [83.9, 7016.0], [84.0, 7200.0], [84.1, 7200.0], [84.2, 7200.0], [84.3, 7200.0], [84.4, 7492.0], [84.5, 7492.0], [84.6, 7492.0], [84.7, 7669.0], [84.8, 7669.0], [84.9, 7669.0], [85.0, 7765.0], [85.1, 7765.0], [85.2, 7765.0], [85.3, 7765.0], [85.4, 7840.0], [85.5, 7840.0], [85.6, 7840.0], [85.7, 7865.0], [85.8, 7865.0], [85.9, 7865.0], [86.0, 8098.0], [86.1, 8098.0], [86.2, 8098.0], [86.3, 8098.0], [86.4, 8098.0], [86.5, 8098.0], [86.6, 8098.0], [86.7, 8109.0], [86.8, 8109.0], [86.9, 8109.0], [87.0, 8197.0], [87.1, 8197.0], [87.2, 8197.0], [87.3, 8197.0], [87.4, 8223.0], [87.5, 8223.0], [87.6, 8223.0], [87.7, 8258.0], [87.8, 8258.0], [87.9, 8258.0], [88.0, 8369.0], [88.1, 8369.0], [88.2, 8369.0], [88.3, 8369.0], [88.4, 8405.0], [88.5, 8405.0], [88.6, 8405.0], [88.7, 8441.0], [88.8, 8441.0], [88.9, 8441.0], [89.0, 8457.0], [89.1, 8457.0], [89.2, 8457.0], [89.3, 8457.0], [89.4, 8484.0], [89.5, 8484.0], [89.6, 8484.0], [89.7, 8516.0], [89.8, 8516.0], [89.9, 8516.0], [90.0, 8516.0], [90.1, 8516.0], [90.2, 8516.0], [90.3, 8516.0], [90.4, 8606.0], [90.5, 8606.0], [90.6, 8606.0], [90.7, 8686.0], [90.8, 8686.0], [90.9, 8686.0], [91.0, 8832.0], [91.1, 8832.0], [91.2, 8832.0], [91.3, 8832.0], [91.4, 8877.0], [91.5, 8877.0], [91.6, 8877.0], [91.7, 8888.0], [91.8, 8888.0], [91.9, 8888.0], [92.0, 8897.0], [92.1, 8897.0], [92.2, 8897.0], [92.3, 8897.0], [92.4, 9967.0], [92.5, 9967.0], [92.6, 9967.0], [92.7, 13083.0], [92.8, 13083.0], [92.9, 13083.0], [93.0, 13925.0], [93.1, 13925.0], [93.2, 13925.0], [93.3, 13925.0], [93.4, 14135.0], [93.5, 14135.0], [93.6, 14135.0], [93.7, 14401.0], [93.8, 14401.0], [93.9, 14401.0], [94.0, 14754.0], [94.1, 14754.0], [94.2, 14754.0], [94.3, 14754.0], [94.4, 14804.0], [94.5, 14804.0], [94.6, 14804.0], [94.7, 14964.0], [94.8, 14964.0], [94.9, 14964.0], [95.0, 15041.0], [95.1, 15041.0], [95.2, 15041.0], [95.3, 15041.0], [95.4, 15533.0], [95.5, 15533.0], [95.6, 15533.0], [95.7, 15947.0], [95.8, 15947.0], [95.9, 15947.0], [96.0, 16081.0], [96.1, 16081.0], [96.2, 16081.0], [96.3, 16081.0], [96.4, 16083.0], [96.5, 16083.0], [96.6, 16083.0], [96.7, 18439.0], [96.8, 18439.0], [96.9, 18439.0], [97.0, 26936.0], [97.1, 26936.0], [97.2, 26936.0], [97.3, 26936.0], [97.4, 27304.0], [97.5, 27304.0], [97.6, 27304.0], [97.7, 27333.0], [97.8, 27333.0], [97.9, 27333.0], [98.0, 27396.0], [98.1, 27396.0], [98.2, 27396.0], [98.3, 27396.0], [98.4, 27695.0], [98.5, 27695.0], [98.6, 27695.0], [98.7, 28110.0], [98.8, 28110.0], [98.9, 28110.0], [99.0, 28293.0], [99.1, 28293.0], [99.2, 28293.0], [99.3, 28293.0], [99.4, 28784.0], [99.5, 28784.0], [99.6, 28784.0], [99.7, 52613.0], [99.8, 52613.0], [99.9, 52613.0]], "isOverall": false, "label": "CreateTokenForLogin", "isController": false}, {"data": [[0.0, 256.0], [0.1, 256.0], [0.2, 256.0], [0.3, 256.0], [0.4, 256.0], [0.5, 256.0], [0.6, 256.0], [0.7, 257.0], [0.8, 257.0], [0.9, 257.0], [1.0, 257.0], [1.1, 257.0], [1.2, 257.0], [1.3, 257.0], [1.4, 257.0], [1.5, 257.0], [1.6, 257.0], [1.7, 257.0], [1.8, 257.0], [1.9, 257.0], [2.0, 257.0], [2.1, 257.0], [2.2, 257.0], [2.3, 257.0], [2.4, 257.0], [2.5, 257.0], [2.6, 257.0], [2.7, 257.0], [2.8, 257.0], [2.9, 257.0], [3.0, 258.0], [3.1, 258.0], [3.2, 258.0], [3.3, 258.0], [3.4, 258.0], [3.5, 258.0], [3.6, 258.0], [3.7, 258.0], [3.8, 258.0], [3.9, 258.0], [4.0, 258.0], [4.1, 258.0], [4.2, 258.0], [4.3, 258.0], [4.4, 258.0], [4.5, 258.0], [4.6, 258.0], [4.7, 258.0], [4.8, 258.0], [4.9, 258.0], [5.0, 258.0], [5.1, 258.0], [5.2, 258.0], [5.3, 258.0], [5.4, 258.0], [5.5, 258.0], [5.6, 258.0], [5.7, 258.0], [5.8, 258.0], [5.9, 258.0], [6.0, 258.0], [6.1, 258.0], [6.2, 258.0], [6.3, 258.0], [6.4, 258.0], [6.5, 258.0], [6.6, 258.0], [6.7, 258.0], [6.8, 258.0], [6.9, 258.0], [7.0, 258.0], [7.1, 258.0], [7.2, 258.0], [7.3, 258.0], [7.4, 258.0], [7.5, 258.0], [7.6, 258.0], [7.7, 258.0], [7.8, 258.0], [7.9, 258.0], [8.0, 258.0], [8.1, 258.0], [8.2, 258.0], [8.3, 258.0], [8.4, 259.0], [8.5, 259.0], [8.6, 259.0], [8.7, 259.0], [8.8, 259.0], [8.9, 259.0], [9.0, 259.0], [9.1, 259.0], [9.2, 259.0], [9.3, 259.0], [9.4, 259.0], [9.5, 259.0], [9.6, 259.0], [9.7, 259.0], [9.8, 259.0], [9.9, 259.0], [10.0, 259.0], [10.1, 259.0], [10.2, 259.0], [10.3, 259.0], [10.4, 259.0], [10.5, 259.0], [10.6, 259.0], [10.7, 259.0], [10.8, 259.0], [10.9, 259.0], [11.0, 259.0], [11.1, 259.0], [11.2, 259.0], [11.3, 259.0], [11.4, 259.0], [11.5, 259.0], [11.6, 259.0], [11.7, 259.0], [11.8, 259.0], [11.9, 259.0], [12.0, 259.0], [12.1, 259.0], [12.2, 259.0], [12.3, 259.0], [12.4, 259.0], [12.5, 259.0], [12.6, 259.0], [12.7, 259.0], [12.8, 259.0], [12.9, 259.0], [13.0, 259.0], [13.1, 259.0], [13.2, 259.0], [13.3, 259.0], [13.4, 259.0], [13.5, 259.0], [13.6, 259.0], [13.7, 259.0], [13.8, 259.0], [13.9, 259.0], [14.0, 259.0], [14.1, 259.0], [14.2, 259.0], [14.3, 259.0], [14.4, 259.0], [14.5, 259.0], [14.6, 259.0], [14.7, 259.0], [14.8, 259.0], [14.9, 259.0], [15.0, 259.0], [15.1, 259.0], [15.2, 259.0], [15.3, 259.0], [15.4, 259.0], [15.5, 259.0], [15.6, 259.0], [15.7, 259.0], [15.8, 259.0], [15.9, 259.0], [16.0, 259.0], [16.1, 259.0], [16.2, 259.0], [16.3, 259.0], [16.4, 259.0], [16.5, 259.0], [16.6, 259.0], [16.7, 259.0], [16.8, 259.0], [16.9, 259.0], [17.0, 259.0], [17.1, 259.0], [17.2, 259.0], [17.3, 259.0], [17.4, 259.0], [17.5, 259.0], [17.6, 259.0], [17.7, 259.0], [17.8, 259.0], [17.9, 259.0], [18.0, 260.0], [18.1, 260.0], [18.2, 260.0], [18.3, 260.0], [18.4, 260.0], [18.5, 260.0], [18.6, 260.0], [18.7, 260.0], [18.8, 260.0], [18.9, 260.0], [19.0, 260.0], [19.1, 260.0], [19.2, 260.0], [19.3, 260.0], [19.4, 260.0], [19.5, 260.0], [19.6, 260.0], [19.7, 260.0], [19.8, 260.0], [19.9, 260.0], [20.0, 260.0], [20.1, 260.0], [20.2, 260.0], [20.3, 260.0], [20.4, 260.0], [20.5, 260.0], [20.6, 260.0], [20.7, 260.0], [20.8, 260.0], [20.9, 260.0], [21.0, 260.0], [21.1, 260.0], [21.2, 260.0], [21.3, 260.0], [21.4, 260.0], [21.5, 260.0], [21.6, 260.0], [21.7, 260.0], [21.8, 260.0], [21.9, 260.0], [22.0, 260.0], [22.1, 260.0], [22.2, 260.0], [22.3, 260.0], [22.4, 260.0], [22.5, 260.0], [22.6, 260.0], [22.7, 260.0], [22.8, 260.0], [22.9, 260.0], [23.0, 260.0], [23.1, 260.0], [23.2, 260.0], [23.3, 260.0], [23.4, 260.0], [23.5, 260.0], [23.6, 260.0], [23.7, 260.0], [23.8, 260.0], [23.9, 260.0], [24.0, 260.0], [24.1, 260.0], [24.2, 260.0], [24.3, 260.0], [24.4, 260.0], [24.5, 260.0], [24.6, 260.0], [24.7, 260.0], [24.8, 260.0], [24.9, 260.0], [25.0, 260.0], [25.1, 260.0], [25.2, 260.0], [25.3, 260.0], [25.4, 260.0], [25.5, 260.0], [25.6, 260.0], [25.7, 260.0], [25.8, 260.0], [25.9, 260.0], [26.0, 260.0], [26.1, 260.0], [26.2, 260.0], [26.3, 260.0], [26.4, 260.0], [26.5, 260.0], [26.6, 260.0], [26.7, 260.0], [26.8, 260.0], [26.9, 260.0], [27.0, 260.0], [27.1, 260.0], [27.2, 260.0], [27.3, 260.0], [27.4, 260.0], [27.5, 260.0], [27.6, 260.0], [27.7, 260.0], [27.8, 260.0], [27.9, 260.0], [28.0, 260.0], [28.1, 260.0], [28.2, 260.0], [28.3, 260.0], [28.4, 260.0], [28.5, 260.0], [28.6, 260.0], [28.7, 260.0], [28.8, 260.0], [28.9, 260.0], [29.0, 260.0], [29.1, 260.0], [29.2, 260.0], [29.3, 260.0], [29.4, 260.0], [29.5, 260.0], [29.6, 260.0], [29.7, 260.0], [29.8, 260.0], [29.9, 260.0], [30.0, 260.0], [30.1, 260.0], [30.2, 260.0], [30.3, 260.0], [30.4, 260.0], [30.5, 260.0], [30.6, 260.0], [30.7, 260.0], [30.8, 260.0], [30.9, 260.0], [31.0, 260.0], [31.1, 260.0], [31.2, 260.0], [31.3, 260.0], [31.4, 260.0], [31.5, 260.0], [31.6, 260.0], [31.7, 260.0], [31.8, 260.0], [31.9, 260.0], [32.0, 260.0], [32.1, 260.0], [32.2, 260.0], [32.3, 260.0], [32.4, 261.0], [32.5, 261.0], [32.6, 261.0], [32.7, 261.0], [32.8, 261.0], [32.9, 261.0], [33.0, 261.0], [33.1, 261.0], [33.2, 261.0], [33.3, 261.0], [33.4, 261.0], [33.5, 261.0], [33.6, 261.0], [33.7, 261.0], [33.8, 261.0], [33.9, 261.0], [34.0, 261.0], [34.1, 261.0], [34.2, 261.0], [34.3, 261.0], [34.4, 261.0], [34.5, 261.0], [34.6, 261.0], [34.7, 261.0], [34.8, 261.0], [34.9, 261.0], [35.0, 261.0], [35.1, 261.0], [35.2, 261.0], [35.3, 261.0], [35.4, 261.0], [35.5, 261.0], [35.6, 261.0], [35.7, 261.0], [35.8, 261.0], [35.9, 261.0], [36.0, 261.0], [36.1, 261.0], [36.2, 261.0], [36.3, 261.0], [36.4, 261.0], [36.5, 261.0], [36.6, 261.0], [36.7, 261.0], [36.8, 261.0], [36.9, 261.0], [37.0, 261.0], [37.1, 261.0], [37.2, 261.0], [37.3, 261.0], [37.4, 261.0], [37.5, 261.0], [37.6, 261.0], [37.7, 261.0], [37.8, 261.0], [37.9, 261.0], [38.0, 261.0], [38.1, 261.0], [38.2, 261.0], [38.3, 261.0], [38.4, 261.0], [38.5, 261.0], [38.6, 261.0], [38.7, 261.0], [38.8, 261.0], [38.9, 261.0], [39.0, 261.0], [39.1, 261.0], [39.2, 261.0], [39.3, 261.0], [39.4, 261.0], [39.5, 261.0], [39.6, 261.0], [39.7, 261.0], [39.8, 261.0], [39.9, 261.0], [40.0, 261.0], [40.1, 261.0], [40.2, 261.0], [40.3, 261.0], [40.4, 261.0], [40.5, 261.0], [40.6, 261.0], [40.7, 261.0], [40.8, 261.0], [40.9, 261.0], [41.0, 261.0], [41.1, 261.0], [41.2, 261.0], [41.3, 261.0], [41.4, 261.0], [41.5, 261.0], [41.6, 261.0], [41.7, 261.0], [41.8, 261.0], [41.9, 261.0], [42.0, 261.0], [42.1, 261.0], [42.2, 261.0], [42.3, 261.0], [42.4, 261.0], [42.5, 261.0], [42.6, 261.0], [42.7, 261.0], [42.8, 261.0], [42.9, 261.0], [43.0, 261.0], [43.1, 261.0], [43.2, 261.0], [43.3, 261.0], [43.4, 261.0], [43.5, 261.0], [43.6, 261.0], [43.7, 261.0], [43.8, 261.0], [43.9, 261.0], [44.0, 261.0], [44.1, 261.0], [44.2, 261.0], [44.3, 261.0], [44.4, 261.0], [44.5, 261.0], [44.6, 261.0], [44.7, 261.0], [44.8, 261.0], [44.9, 261.0], [45.0, 261.0], [45.1, 261.0], [45.2, 261.0], [45.3, 261.0], [45.4, 261.0], [45.5, 261.0], [45.6, 261.0], [45.7, 261.0], [45.8, 261.0], [45.9, 261.0], [46.0, 261.0], [46.1, 261.0], [46.2, 261.0], [46.3, 261.0], [46.4, 261.0], [46.5, 261.0], [46.6, 261.0], [46.7, 261.0], [46.8, 261.0], [46.9, 261.0], [47.0, 261.0], [47.1, 261.0], [47.2, 261.0], [47.3, 261.0], [47.4, 261.0], [47.5, 261.0], [47.6, 261.0], [47.7, 261.0], [47.8, 261.0], [47.9, 261.0], [48.0, 262.0], [48.1, 262.0], [48.2, 262.0], [48.3, 262.0], [48.4, 262.0], [48.5, 262.0], [48.6, 262.0], [48.7, 262.0], [48.8, 262.0], [48.9, 262.0], [49.0, 262.0], [49.1, 262.0], [49.2, 262.0], [49.3, 262.0], [49.4, 262.0], [49.5, 262.0], [49.6, 262.0], [49.7, 262.0], [49.8, 262.0], [49.9, 262.0], [50.0, 262.0], [50.1, 262.0], [50.2, 262.0], [50.3, 262.0], [50.4, 262.0], [50.5, 262.0], [50.6, 262.0], [50.7, 262.0], [50.8, 262.0], [50.9, 262.0], [51.0, 262.0], [51.1, 262.0], [51.2, 262.0], [51.3, 262.0], [51.4, 262.0], [51.5, 262.0], [51.6, 262.0], [51.7, 262.0], [51.8, 262.0], [51.9, 262.0], [52.0, 262.0], [52.1, 262.0], [52.2, 262.0], [52.3, 262.0], [52.4, 262.0], [52.5, 262.0], [52.6, 262.0], [52.7, 262.0], [52.8, 262.0], [52.9, 262.0], [53.0, 262.0], [53.1, 262.0], [53.2, 262.0], [53.3, 262.0], [53.4, 262.0], [53.5, 262.0], [53.6, 262.0], [53.7, 262.0], [53.8, 262.0], [53.9, 262.0], [54.0, 262.0], [54.1, 262.0], [54.2, 262.0], [54.3, 262.0], [54.4, 262.0], [54.5, 262.0], [54.6, 262.0], [54.7, 262.0], [54.8, 262.0], [54.9, 262.0], [55.0, 262.0], [55.1, 262.0], [55.2, 262.0], [55.3, 262.0], [55.4, 262.0], [55.5, 262.0], [55.6, 262.0], [55.7, 262.0], [55.8, 262.0], [55.9, 262.0], [56.0, 262.0], [56.1, 262.0], [56.2, 262.0], [56.3, 262.0], [56.4, 262.0], [56.5, 262.0], [56.6, 262.0], [56.7, 262.0], [56.8, 262.0], [56.9, 262.0], [57.0, 262.0], [57.1, 262.0], [57.2, 262.0], [57.3, 262.0], [57.4, 262.0], [57.5, 262.0], [57.6, 262.0], [57.7, 262.0], [57.8, 262.0], [57.9, 262.0], [58.0, 262.0], [58.1, 262.0], [58.2, 262.0], [58.3, 262.0], [58.4, 262.0], [58.5, 262.0], [58.6, 262.0], [58.7, 262.0], [58.8, 262.0], [58.9, 262.0], [59.0, 262.0], [59.1, 262.0], [59.2, 262.0], [59.3, 262.0], [59.4, 262.0], [59.5, 262.0], [59.6, 262.0], [59.7, 262.0], [59.8, 262.0], [59.9, 262.0], [60.0, 262.0], [60.1, 262.0], [60.2, 262.0], [60.3, 262.0], [60.4, 262.0], [60.5, 262.0], [60.6, 262.0], [60.7, 262.0], [60.8, 262.0], [60.9, 262.0], [61.0, 262.0], [61.1, 262.0], [61.2, 262.0], [61.3, 262.0], [61.4, 262.0], [61.5, 262.0], [61.6, 262.0], [61.7, 263.0], [61.8, 263.0], [61.9, 263.0], [62.0, 263.0], [62.1, 263.0], [62.2, 263.0], [62.3, 263.0], [62.4, 263.0], [62.5, 263.0], [62.6, 263.0], [62.7, 263.0], [62.8, 263.0], [62.9, 263.0], [63.0, 263.0], [63.1, 263.0], [63.2, 263.0], [63.3, 263.0], [63.4, 263.0], [63.5, 263.0], [63.6, 263.0], [63.7, 263.0], [63.8, 263.0], [63.9, 263.0], [64.0, 263.0], [64.1, 263.0], [64.2, 263.0], [64.3, 263.0], [64.4, 263.0], [64.5, 263.0], [64.6, 263.0], [64.7, 263.0], [64.8, 263.0], [64.9, 263.0], [65.0, 263.0], [65.1, 263.0], [65.2, 263.0], [65.3, 263.0], [65.4, 263.0], [65.5, 263.0], [65.6, 263.0], [65.7, 263.0], [65.8, 263.0], [65.9, 263.0], [66.0, 263.0], [66.1, 263.0], [66.2, 263.0], [66.3, 263.0], [66.4, 263.0], [66.5, 263.0], [66.6, 263.0], [66.7, 263.0], [66.8, 263.0], [66.9, 263.0], [67.0, 263.0], [67.1, 263.0], [67.2, 263.0], [67.3, 263.0], [67.4, 263.0], [67.5, 263.0], [67.6, 263.0], [67.7, 263.0], [67.8, 263.0], [67.9, 263.0], [68.0, 263.0], [68.1, 263.0], [68.2, 263.0], [68.3, 263.0], [68.4, 263.0], [68.5, 263.0], [68.6, 263.0], [68.7, 264.0], [68.8, 264.0], [68.9, 264.0], [69.0, 264.0], [69.1, 264.0], [69.2, 264.0], [69.3, 264.0], [69.4, 264.0], [69.5, 264.0], [69.6, 264.0], [69.7, 264.0], [69.8, 264.0], [69.9, 264.0], [70.0, 264.0], [70.1, 264.0], [70.2, 264.0], [70.3, 264.0], [70.4, 264.0], [70.5, 264.0], [70.6, 264.0], [70.7, 264.0], [70.8, 264.0], [70.9, 264.0], [71.0, 264.0], [71.1, 264.0], [71.2, 264.0], [71.3, 264.0], [71.4, 264.0], [71.5, 264.0], [71.6, 264.0], [71.7, 264.0], [71.8, 264.0], [71.9, 264.0], [72.0, 264.0], [72.1, 264.0], [72.2, 264.0], [72.3, 264.0], [72.4, 264.0], [72.5, 264.0], [72.6, 264.0], [72.7, 264.0], [72.8, 264.0], [72.9, 264.0], [73.0, 265.0], [73.1, 265.0], [73.2, 265.0], [73.3, 265.0], [73.4, 265.0], [73.5, 265.0], [73.6, 265.0], [73.7, 265.0], [73.8, 265.0], [73.9, 265.0], [74.0, 265.0], [74.1, 265.0], [74.2, 265.0], [74.3, 265.0], [74.4, 265.0], [74.5, 265.0], [74.6, 265.0], [74.7, 265.0], [74.8, 265.0], [74.9, 265.0], [75.0, 266.0], [75.1, 266.0], [75.2, 266.0], [75.3, 266.0], [75.4, 266.0], [75.5, 266.0], [75.6, 266.0], [75.7, 266.0], [75.8, 266.0], [75.9, 266.0], [76.0, 266.0], [76.1, 266.0], [76.2, 266.0], [76.3, 266.0], [76.4, 266.0], [76.5, 266.0], [76.6, 266.0], [76.7, 266.0], [76.8, 266.0], [76.9, 266.0], [77.0, 266.0], [77.1, 266.0], [77.2, 266.0], [77.3, 266.0], [77.4, 266.0], [77.5, 266.0], [77.6, 266.0], [77.7, 266.0], [77.8, 266.0], [77.9, 266.0], [78.0, 267.0], [78.1, 267.0], [78.2, 267.0], [78.3, 267.0], [78.4, 267.0], [78.5, 267.0], [78.6, 267.0], [78.7, 267.0], [78.8, 267.0], [78.9, 267.0], [79.0, 267.0], [79.1, 267.0], [79.2, 267.0], [79.3, 267.0], [79.4, 268.0], [79.5, 268.0], [79.6, 268.0], [79.7, 269.0], [79.8, 269.0], [79.9, 269.0], [80.0, 269.0], [80.1, 269.0], [80.2, 269.0], [80.3, 269.0], [80.4, 270.0], [80.5, 270.0], [80.6, 270.0], [80.7, 270.0], [80.8, 270.0], [80.9, 270.0], [81.0, 274.0], [81.1, 274.0], [81.2, 274.0], [81.3, 274.0], [81.4, 410.0], [81.5, 410.0], [81.6, 410.0], [81.7, 410.0], [81.8, 410.0], [81.9, 410.0], [82.0, 440.0], [82.1, 440.0], [82.2, 440.0], [82.3, 440.0], [82.4, 514.0], [82.5, 514.0], [82.6, 514.0], [82.7, 515.0], [82.8, 515.0], [82.9, 515.0], [83.0, 517.0], [83.1, 517.0], [83.2, 517.0], [83.3, 517.0], [83.4, 825.0], [83.5, 825.0], [83.6, 825.0], [83.7, 832.0], [83.8, 832.0], [83.9, 832.0], [84.0, 833.0], [84.1, 833.0], [84.2, 833.0], [84.3, 833.0], [84.4, 837.0], [84.5, 837.0], [84.6, 837.0], [84.7, 845.0], [84.8, 845.0], [84.9, 845.0], [85.0, 846.0], [85.1, 846.0], [85.2, 846.0], [85.3, 846.0], [85.4, 848.0], [85.5, 848.0], [85.6, 848.0], [85.7, 857.0], [85.8, 857.0], [85.9, 857.0], [86.0, 858.0], [86.1, 858.0], [86.2, 858.0], [86.3, 858.0], [86.4, 858.0], [86.5, 858.0], [86.6, 858.0], [86.7, 859.0], [86.8, 859.0], [86.9, 859.0], [87.0, 861.0], [87.1, 861.0], [87.2, 861.0], [87.3, 861.0], [87.4, 867.0], [87.5, 867.0], [87.6, 867.0], [87.7, 870.0], [87.8, 870.0], [87.9, 870.0], [88.0, 879.0], [88.1, 879.0], [88.2, 879.0], [88.3, 879.0], [88.4, 881.0], [88.5, 881.0], [88.6, 881.0], [88.7, 883.0], [88.8, 883.0], [88.9, 883.0], [89.0, 888.0], [89.1, 888.0], [89.2, 888.0], [89.3, 888.0], [89.4, 889.0], [89.5, 889.0], [89.6, 889.0], [89.7, 891.0], [89.8, 891.0], [89.9, 891.0], [90.0, 891.0], [90.1, 891.0], [90.2, 891.0], [90.3, 891.0], [90.4, 891.0], [90.5, 891.0], [90.6, 891.0], [90.7, 892.0], [90.8, 892.0], [90.9, 892.0], [91.0, 892.0], [91.1, 892.0], [91.2, 892.0], [91.3, 892.0], [91.4, 892.0], [91.5, 892.0], [91.6, 892.0], [91.7, 893.0], [91.8, 893.0], [91.9, 893.0], [92.0, 894.0], [92.1, 894.0], [92.2, 894.0], [92.3, 894.0], [92.4, 895.0], [92.5, 895.0], [92.6, 895.0], [92.7, 904.0], [92.8, 904.0], [92.9, 904.0], [93.0, 904.0], [93.1, 904.0], [93.2, 904.0], [93.3, 904.0], [93.4, 912.0], [93.5, 912.0], [93.6, 912.0], [93.7, 920.0], [93.8, 920.0], [93.9, 920.0], [94.0, 923.0], [94.1, 923.0], [94.2, 923.0], [94.3, 923.0], [94.4, 925.0], [94.5, 925.0], [94.6, 925.0], [94.7, 926.0], [94.8, 926.0], [94.9, 926.0], [95.0, 936.0], [95.1, 936.0], [95.2, 936.0], [95.3, 936.0], [95.4, 936.0], [95.5, 936.0], [95.6, 936.0], [95.7, 940.0], [95.8, 940.0], [95.9, 940.0], [96.0, 947.0], [96.1, 947.0], [96.2, 947.0], [96.3, 947.0], [96.4, 954.0], [96.5, 954.0], [96.6, 954.0], [96.7, 992.0], [96.8, 992.0], [96.9, 992.0], [97.0, 1156.0], [97.1, 1156.0], [97.2, 1156.0], [97.3, 1156.0], [97.4, 1421.0], [97.5, 1421.0], [97.6, 1421.0], [97.7, 1425.0], [97.8, 1425.0], [97.9, 1425.0], [98.0, 1477.0], [98.1, 1477.0], [98.2, 1477.0], [98.3, 1477.0], [98.4, 1516.0], [98.5, 1516.0], [98.6, 1516.0], [98.7, 1525.0], [98.8, 1525.0], [98.9, 1525.0], [99.0, 1767.0], [99.1, 1767.0], [99.2, 1767.0], [99.3, 1767.0], [99.4, 2085.0], [99.5, 2085.0], [99.6, 2085.0], [99.7, 5136.0], [99.8, 5136.0], [99.9, 5136.0]], "isOverall": false, "label": "UpdateBooking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 251.0, "series": [{"data": [[1100.0, 2.0], [300.0, 1.0], [2500.0, 1.0], [1300.0, 1.0], [700.0, 1.0], [1500.0, 1.0], [200.0, 251.0], [800.0, 29.0], [400.0, 2.0], [900.0, 8.0], [1000.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "DeleteBokking", "isController": false}, {"data": [[2400.0, 1.0], [3000.0, 1.0], [200.0, 244.0], [800.0, 9.0], [900.0, 24.0], [1000.0, 4.0], [1100.0, 1.0], [1200.0, 3.0], [5600.0, 1.0], [1500.0, 5.0], [1600.0, 2.0], [500.0, 4.0], [2000.0, 1.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[2400.0, 1.0], [2900.0, 3.0], [3000.0, 1.0], [200.0, 235.0], [900.0, 39.0], [1000.0, 3.0], [1100.0, 3.0], [1200.0, 2.0], [1500.0, 4.0], [1600.0, 2.0], [1700.0, 2.0], [1800.0, 2.0], [500.0, 3.0]], "isOverall": false, "label": "CreateBooking", "isController": false}, {"data": [[1000.0, 25.0], [1200.0, 19.0], [1300.0, 7.0], [1400.0, 1.0], [1500.0, 6.0], [1600.0, 10.0], [1700.0, 1.0], [1800.0, 6.0], [1900.0, 2.0], [2000.0, 7.0], [2100.0, 6.0], [2300.0, 21.0], [2200.0, 3.0], [2400.0, 1.0], [2500.0, 8.0], [2600.0, 16.0], [2800.0, 5.0], [2700.0, 1.0], [2900.0, 7.0], [3000.0, 5.0], [3100.0, 5.0], [3300.0, 7.0], [3200.0, 3.0], [3400.0, 3.0], [3600.0, 5.0], [3800.0, 4.0], [3900.0, 3.0], [4000.0, 4.0], [4100.0, 7.0], [4200.0, 2.0], [4300.0, 4.0], [4600.0, 3.0], [4400.0, 5.0], [4500.0, 3.0], [4700.0, 5.0], [4800.0, 6.0], [4900.0, 5.0], [5000.0, 5.0], [5100.0, 3.0], [5300.0, 1.0], [5200.0, 1.0], [5400.0, 3.0], [5500.0, 3.0], [5800.0, 1.0], [5900.0, 1.0], [6200.0, 1.0], [6300.0, 1.0], [7000.0, 1.0], [7200.0, 1.0], [7400.0, 1.0], [7600.0, 1.0], [7700.0, 1.0], [7800.0, 2.0], [8100.0, 2.0], [8000.0, 2.0], [8500.0, 2.0], [8200.0, 2.0], [8400.0, 4.0], [8600.0, 2.0], [8300.0, 1.0], [8800.0, 4.0], [9900.0, 1.0], [13000.0, 1.0], [13900.0, 1.0], [14100.0, 1.0], [14400.0, 1.0], [14700.0, 1.0], [14800.0, 1.0], [15000.0, 1.0], [14900.0, 1.0], [15500.0, 1.0], [16000.0, 2.0], [15900.0, 1.0], [18400.0, 1.0], [27300.0, 3.0], [27600.0, 1.0], [26900.0, 1.0], [28100.0, 1.0], [28200.0, 1.0], [28700.0, 1.0], [52600.0, 1.0]], "isOverall": false, "label": "CreateTokenForLogin", "isController": false}, {"data": [[1100.0, 1.0], [5100.0, 1.0], [1400.0, 3.0], [1500.0, 2.0], [200.0, 244.0], [800.0, 28.0], [400.0, 3.0], [1700.0, 1.0], [900.0, 13.0], [2000.0, 1.0], [500.0, 3.0]], "isOverall": false, "label": "UpdateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 52600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 239.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 980.0, "series": [{"data": [[0.0, 980.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 239.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 281.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 9.590361445783127, "minX": 1.7220048E12, "maxY": 74.15384615384613, "series": [{"data": [[1.72200486E12, 9.590361445783127], [1.7220048E12, 74.15384615384613]], "isOverall": false, "label": "BookingSite", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72200486E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 255.0, "minX": 1.0, "maxY": 52613.0, "series": [{"data": [[2.0, 409.0], [3.0, 390.0], [4.0, 409.0], [5.0, 268.0], [6.0, 514.0], [7.0, 263.0], [8.0, 262.0], [9.0, 259.0], [10.0, 259.0], [11.0, 258.0], [12.0, 261.0], [13.0, 263.0], [14.0, 260.0], [15.0, 262.0], [16.0, 260.0], [17.0, 262.0], [18.0, 261.0], [19.0, 984.0], [20.0, 266.0], [21.0, 261.0], [22.0, 259.0], [23.0, 936.0], [24.0, 260.0], [25.0, 259.0], [26.0, 262.0], [27.0, 262.0], [28.0, 259.0], [29.0, 262.0], [30.0, 1119.0], [31.0, 991.0], [33.0, 257.0], [32.0, 1108.0], [35.0, 263.0], [34.0, 260.0], [37.0, 258.0], [36.0, 259.0], [39.0, 261.0], [38.0, 263.0], [41.0, 264.75], [40.0, 261.0], [43.0, 261.0], [42.0, 855.0], [44.0, 260.5], [45.0, 264.0], [47.0, 257.0], [46.0, 260.0], [49.0, 257.0], [48.0, 262.0], [51.0, 261.6666666666667], [50.0, 260.0], [52.0, 452.6666666666667], [53.0, 266.0], [54.0, 259.6666666666667], [55.0, 551.0], [57.0, 489.09999999999997], [56.0, 261.75], [58.0, 422.7142857142857], [59.0, 354.8333333333333], [60.0, 555.5], [61.0, 261.6666666666667], [62.0, 444.3333333333333], [63.0, 258.0], [66.0, 496.6], [65.0, 259.6666666666667], [67.0, 399.25], [64.0, 257.0], [68.0, 259.2], [69.0, 480.66666666666663], [70.0, 260.0], [71.0, 263.5], [74.0, 532.5], [75.0, 892.0], [73.0, 841.0], [72.0, 258.0], [76.0, 381.2], [77.0, 370.3333333333333], [79.0, 261.0], [78.0, 395.44444444444446], [81.0, 435.70000000000005], [80.0, 260.0], [83.0, 353.75], [82.0, 439.52631578947364], [85.0, 259.0], [84.0, 261.25], [87.0, 260.0], [86.0, 266.0], [91.0, 261.0], [90.0, 260.0], [89.0, 260.0], [88.0, 258.0], [93.0, 262.5], [95.0, 315.58333333333337], [94.0, 259.6], [92.0, 261.0], [97.0, 532.2222222222222], [98.0, 260.42857142857144], [99.0, 266.0], [96.0, 532.8571428571429], [102.0, 260.25], [101.0, 260.6], [103.0, 258.0], [100.0, 263.0], [1.0, 513.0]], "isOverall": false, "label": "DeleteBokking", "isController": false}, {"data": [[69.51333333333325, 363.6166666666668]], "isOverall": false, "label": "DeleteBokking-Aggregated", "isController": false}, {"data": [[2.0, 5626.0], [4.0, 1312.5], [5.0, 266.0], [7.0, 3040.0], [8.0, 386.5], [10.0, 691.5], [12.0, 255.0], [14.0, 887.3333333333334], [16.0, 260.5], [20.0, 260.0], [22.0, 258.0], [24.0, 1001.5], [26.0, 260.0], [28.0, 1051.0], [33.0, 263.0], [34.0, 261.0], [35.0, 259.5], [37.0, 260.5], [39.0, 264.0], [38.0, 481.33333333333337], [41.0, 261.5], [40.0, 576.6666666666666], [42.0, 259.0], [43.0, 256.0], [45.0, 259.6666666666667], [44.0, 259.0], [46.0, 263.0], [50.0, 258.75], [51.0, 886.5], [52.0, 259.6666666666667], [53.0, 259.0], [54.0, 574.25], [55.0, 259.0], [56.0, 259.8333333333333], [57.0, 315.45454545454544], [58.0, 360.7142857142857], [59.0, 258.5], [61.0, 259.0], [60.0, 260.0], [62.0, 258.0], [63.0, 258.0], [65.0, 392.0], [64.0, 260.0], [66.0, 257.0], [67.0, 699.6666666666666], [68.0, 561.2], [70.0, 259.5], [71.0, 794.8], [69.0, 365.42857142857144], [73.0, 263.0], [75.0, 258.0], [72.0, 260.0], [76.0, 259.6], [77.0, 258.6], [78.0, 260.0], [79.0, 259.0], [80.0, 384.6666666666667], [81.0, 407.4285714285714], [82.0, 405.1578947368421], [83.0, 385.40000000000003], [84.0, 367.3333333333333], [85.0, 261.0], [87.0, 953.0], [86.0, 263.0], [89.0, 259.0], [90.0, 260.0], [93.0, 259.6666666666667], [94.0, 417.45454545454544], [95.0, 502.5454545454546], [97.0, 314.5], [98.0, 592.625], [99.0, 424.5], [96.0, 363.85714285714283], [101.0, 383.53333333333336], [100.0, 955.5], [102.0, 431.75], [1.0, 1090.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[70.77666666666661, 431.8233333333332]], "isOverall": false, "label": "GetBooking-Aggregated", "isController": false}, {"data": [[4.0, 261.0], [5.0, 561.0], [8.0, 343.3333333333333], [10.0, 1164.5], [13.0, 256.0], [15.0, 1073.0], [16.0, 505.0], [21.0, 265.0], [24.0, 1736.0], [26.0, 645.5], [29.0, 258.0], [30.0, 263.0], [31.0, 258.0], [35.0, 260.3333333333333], [34.0, 257.0], [37.0, 261.0], [36.0, 259.0], [40.0, 257.4], [41.0, 257.0], [42.0, 258.0], [43.0, 1044.0], [45.0, 255.0], [44.0, 259.5], [47.0, 257.0], [46.0, 995.0], [48.0, 257.5], [49.0, 595.5], [50.0, 492.3333333333333], [51.0, 484.3333333333333], [52.0, 258.3333333333333], [54.0, 260.6666666666667], [55.0, 260.0], [56.0, 922.3333333333334], [57.0, 596.0], [58.0, 257.875], [59.0, 258.0], [60.0, 667.1428571428571], [61.0, 259.0], [62.0, 1587.5], [63.0, 255.5], [64.0, 588.0], [65.0, 480.66666666666663], [66.0, 504.0], [67.0, 261.3333333333333], [68.0, 391.8], [70.0, 260.0], [69.0, 624.5], [73.0, 758.25], [74.0, 259.8], [75.0, 924.6666666666667], [72.0, 800.2], [76.0, 338.00000000000006], [77.0, 371.16666666666663], [78.0, 349.625], [79.0, 258.5], [80.0, 693.25], [81.0, 418.30769230769226], [82.0, 337.3888888888889], [83.0, 501.3888888888889], [84.0, 620.0], [86.0, 601.0], [87.0, 259.5], [89.0, 258.0], [90.0, 259.5], [91.0, 258.5], [93.0, 537.0], [92.0, 257.0], [94.0, 426.5], [95.0, 325.09999999999997], [96.0, 259.0], [97.0, 736.4285714285714], [98.0, 406.1111111111111], [99.0, 257.0], [101.0, 726.7777777777778], [102.0, 1018.3333333333333], [100.0, 400.8888888888889], [103.0, 990.0], [1.0, 515.0]], "isOverall": false, "label": "CreateBooking", "isController": false}, {"data": [[71.14, 465.67666666666673]], "isOverall": false, "label": "CreateBooking-Aggregated", "isController": false}, {"data": [[4.0, 27333.0], [5.0, 27779.666666666668], [8.0, 28090.0], [9.0, 27695.0], [11.0, 27304.0], [14.0, 15109.0], [16.0, 12225.75], [19.0, 13925.0], [24.0, 14804.0], [25.0, 1040.0], [26.0, 1450.0], [27.0, 1352.5], [31.0, 1445.5], [33.0, 1295.0], [34.0, 8098.0], [37.0, 4146.666666666666], [39.0, 1286.0], [38.0, 12022.5], [41.0, 2194.5], [40.0, 2686.0], [44.0, 5755.333333333333], [45.0, 3781.5], [46.0, 4229.0], [47.0, 1284.0], [48.0, 4857.0], [49.0, 1025.0], [50.0, 1816.75], [51.0, 2769.0], [52.0, 1824.6], [54.0, 3683.6666666666665], [55.0, 2567.0], [57.0, 2020.8], [56.0, 3163.0], [58.0, 3070.2500000000005], [59.0, 3749.0], [60.0, 3163.0], [61.0, 2961.0], [62.0, 2791.0], [63.0, 1025.0], [64.0, 2676.0], [66.0, 1827.0], [67.0, 1818.0], [65.0, 6553.666666666667], [68.0, 2596.75], [71.0, 2397.8], [70.0, 4618.0], [69.0, 5294.0], [72.0, 3211.0], [73.0, 3938.6666666666665], [74.0, 2252.3333333333335], [75.0, 2770.5], [76.0, 3967.5384615384614], [77.0, 2857.5454545454545], [78.0, 4876.714285714286], [79.0, 1282.0], [80.0, 4595.0], [81.0, 3172.3333333333335], [83.0, 2999.6666666666665], [82.0, 3712.933333333333], [84.0, 4440.400000000001], [85.0, 3566.6666666666665], [87.0, 1815.0], [89.0, 1871.0], [90.0, 1545.0], [92.0, 4887.0], [94.0, 3911.375], [95.0, 3868.5], [93.0, 2525.3333333333335], [96.0, 5023.75], [97.0, 6042.818181818182], [98.0, 3615.0], [99.0, 4851.428571428572], [100.0, 2971.0], [101.0, 3500.909090909091], [102.0, 3321.0], [1.0, 52613.0]], "isOverall": false, "label": "CreateTokenForLogin", "isController": false}, {"data": [[71.41333333333336, 4705.710000000002]], "isOverall": false, "label": "CreateTokenForLogin-Aggregated", "isController": false}, {"data": [[2.0, 410.0], [3.0, 440.0], [4.0, 410.0], [5.0, 267.0], [7.0, 387.5], [8.0, 262.0], [10.0, 388.0], [11.0, 258.0], [13.0, 264.0], [14.0, 259.5], [15.0, 258.0], [16.0, 263.0], [17.0, 263.0], [21.0, 264.0], [24.0, 261.0], [26.0, 488.33333333333337], [29.0, 954.0], [35.0, 262.3333333333333], [37.0, 261.0], [36.0, 259.0], [38.0, 261.5], [39.0, 269.0], [41.0, 578.5], [40.0, 260.5], [43.0, 848.0], [42.0, 259.0], [45.0, 1414.8], [44.0, 1641.5], [49.0, 261.6666666666667], [48.0, 845.0], [51.0, 576.5], [52.0, 264.5], [53.0, 258.0], [54.0, 261.0], [55.0, 496.5], [57.0, 471.0], [56.0, 262.8571428571429], [58.0, 419.0], [59.0, 260.5], [60.0, 261.6666666666667], [61.0, 893.0], [63.0, 857.0], [64.0, 260.0], [66.0, 262.75], [65.0, 925.0], [67.0, 410.25], [68.0, 370.3333333333333], [69.0, 332.55555555555554], [70.0, 264.0], [74.0, 263.5], [75.0, 262.0], [73.0, 263.0], [72.0, 259.0], [77.0, 259.8571428571429], [76.0, 261.4], [78.0, 261.0], [79.0, 262.0], [80.0, 376.8], [81.0, 353.8461538461538], [82.0, 375.9130434782609], [83.0, 358.11111111111114], [84.0, 364.5], [86.0, 868.5], [89.0, 266.0], [91.0, 263.5], [90.0, 259.0], [95.0, 262.22222222222223], [93.0, 564.0], [94.0, 522.0], [92.0, 258.0], [96.0, 494.75], [97.0, 401.6666666666667], [98.0, 574.0], [99.0, 468.3333333333333], [100.0, 451.6666666666667], [101.0, 394.94736842105266], [102.0, 261.0], [1.0, 514.0]], "isOverall": false, "label": "UpdateBooking", "isController": false}, {"data": [[70.06333333333335, 401.8200000000001]], "isOverall": false, "label": "UpdateBooking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 103.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 439.5, "minX": 1.7220048E12, "maxY": 20441.3, "series": [{"data": [[1.72200486E12, 1195.0], [1.7220048E12, 20441.3]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72200486E12, 439.5], [1.7220048E12, 7515.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72200486E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 334.05882352941177, "minX": 1.7220048E12, "maxY": 23572.333333333332, "series": [{"data": [[1.72200486E12, 348.2631578947368], [1.7220048E12, 364.6548042704628]], "isOverall": false, "label": "DeleteBokking", "isController": false}, {"data": [[1.72200486E12, 1140.0625], [1.7220048E12, 391.9225352112675]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.72200486E12, 572.9375000000001], [1.7220048E12, 459.6338028169015]], "isOverall": false, "label": "CreateBooking", "isController": false}, {"data": [[1.72200486E12, 23572.333333333332], [1.7220048E12, 3712.7298245614056]], "isOverall": false, "label": "CreateTokenForLogin", "isController": false}, {"data": [[1.72200486E12, 334.05882352941177], [1.7220048E12, 405.8904593639577]], "isOverall": false, "label": "UpdateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72200486E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 334.0, "minX": 1.7220048E12, "maxY": 23572.333333333332, "series": [{"data": [[1.72200486E12, 348.2105263157895], [1.7220048E12, 364.63345195729545]], "isOverall": false, "label": "DeleteBokking", "isController": false}, {"data": [[1.72200486E12, 1140.0625], [1.7220048E12, 391.8978873239432]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.72200486E12, 572.9375000000001], [1.7220048E12, 459.61619718309845]], "isOverall": false, "label": "CreateBooking", "isController": false}, {"data": [[1.72200486E12, 23572.333333333332], [1.7220048E12, 3712.7052631578963]], "isOverall": false, "label": "CreateTokenForLogin", "isController": false}, {"data": [[1.72200486E12, 334.0], [1.7220048E12, 405.87279151943466]], "isOverall": false, "label": "UpdateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72200486E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7220048E12, "maxY": 23040.333333333332, "series": [{"data": [[1.72200486E12, 0.0], [1.7220048E12, 0.0]], "isOverall": false, "label": "DeleteBokking", "isController": false}, {"data": [[1.72200486E12, 0.0], [1.7220048E12, 0.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.72200486E12, 0.0], [1.7220048E12, 0.0]], "isOverall": false, "label": "CreateBooking", "isController": false}, {"data": [[1.72200486E12, 23040.333333333332], [1.7220048E12, 3254.7754385964918]], "isOverall": false, "label": "CreateTokenForLogin", "isController": false}, {"data": [[1.72200486E12, 0.0], [1.7220048E12, 0.0]], "isOverall": false, "label": "UpdateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72200486E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 254.0, "minX": 1.7220048E12, "maxY": 52613.0, "series": [{"data": [[1.72200486E12, 52613.0], [1.7220048E12, 16081.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72200486E12, 255.0], [1.7220048E12, 254.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72200486E12, 27156.800000000003], [1.7220048E12, 2912.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72200486E12, 52613.0], [1.7220048E12, 8671.599999999995]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72200486E12, 409.0], [1.7220048E12, 262.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.72200486E12, 28027.0], [1.7220048E12, 4709.4]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72200486E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 260.0, "minX": 1.0, "maxY": 26936.0, "series": [{"data": [[2.0, 425.0], [34.0, 263.0], [38.0, 262.0], [40.0, 262.0], [49.0, 266.0], [3.0, 26936.0], [51.0, 261.0], [55.0, 262.0], [54.0, 262.0], [57.0, 262.0], [56.0, 261.0], [59.0, 262.0], [63.0, 260.0], [66.0, 261.0], [64.0, 261.0], [67.0, 261.0], [4.0, 266.5], [68.0, 261.0], [69.0, 263.0], [72.0, 260.0], [78.0, 262.0], [5.0, 514.0], [99.0, 262.0], [6.0, 388.0], [8.0, 623.5], [10.0, 260.5], [14.0, 262.5], [1.0, 5626.0], [21.0, 263.0], [22.0, 263.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 99.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 260.0, "minX": 1.0, "maxY": 26936.0, "series": [{"data": [[2.0, 425.0], [34.0, 263.0], [38.0, 262.0], [40.0, 262.0], [49.0, 266.0], [3.0, 26936.0], [51.0, 261.0], [55.0, 262.0], [54.0, 262.0], [57.0, 262.0], [56.0, 261.0], [59.0, 262.0], [63.0, 260.0], [66.0, 261.0], [64.0, 261.0], [67.0, 261.0], [4.0, 266.5], [68.0, 261.0], [69.0, 263.0], [72.0, 260.0], [78.0, 262.0], [5.0, 514.0], [99.0, 262.0], [6.0, 388.0], [8.0, 623.5], [10.0, 260.5], [14.0, 262.5], [1.0, 5626.0], [21.0, 263.0], [22.0, 263.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 99.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0666666666666667, "minX": 1.7220048E12, "maxY": 23.933333333333334, "series": [{"data": [[1.72200486E12, 1.0666666666666667], [1.7220048E12, 23.933333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72200486E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.31666666666666665, "minX": 1.7220048E12, "maxY": 18.933333333333334, "series": [{"data": [[1.72200486E12, 1.0666666666666667], [1.7220048E12, 18.933333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72200486E12, 0.31666666666666665], [1.7220048E12, 4.683333333333334]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72200486E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.7220048E12, "maxY": 4.75, "series": [{"data": [[1.72200486E12, 0.26666666666666666], [1.7220048E12, 4.733333333333333]], "isOverall": false, "label": "GetBooking-success", "isController": false}, {"data": [[1.72200486E12, 0.25], [1.7220048E12, 4.75]], "isOverall": false, "label": "CreateTokenForLogin-success", "isController": false}, {"data": [[1.72200486E12, 0.26666666666666666], [1.7220048E12, 4.733333333333333]], "isOverall": false, "label": "CreateBooking-success", "isController": false}, {"data": [[1.72200486E12, 0.2833333333333333], [1.7220048E12, 4.716666666666667]], "isOverall": false, "label": "UpdateBooking-success", "isController": false}, {"data": [[1.72200486E12, 0.31666666666666665], [1.7220048E12, 4.683333333333334]], "isOverall": false, "label": "DeleteBokking-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72200486E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.3833333333333333, "minX": 1.7220048E12, "maxY": 23.616666666666667, "series": [{"data": [[1.72200486E12, 1.3833333333333333], [1.7220048E12, 23.616666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72200486E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

